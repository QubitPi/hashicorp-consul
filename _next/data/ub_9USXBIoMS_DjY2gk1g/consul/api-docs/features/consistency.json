{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Consul","url":"/consul"},{"title":"API","url":"/consul/api-docs","isCurrentPage":false},{"title":"API Features"},{"title":"Consistency Modes","url":"/consul/api-docs/features/consistency","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Consul Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Consul","fullPath":"/consul","theme":"consul"},{"title":"Install","fullPath":"/consul/install"},{"title":"Tutorials","fullPath":"/consul/tutorials"},{"title":"Documentation","fullPath":"/consul/docs"},{"title":"API","fullPath":"/consul/api-docs"},{"title":"CLI","fullPath":"/consul/commands"}],"showFilterInput":false,"title":"Consul","visuallyHideTitle":true},{"backToLinkProps":{"text":"Consul Home","href":"/consul"},"levelButtonProps":{"levelUpButtonText":"Consul Home"},"menuItems":[{"title":"API","fullPath":"/consul/api-docs","theme":"consul"},{"title":"API Structure","path":"api-structure","filePath":"../content/api-docs/api-structure.mdx","fullPath":"/consul/api-docs/api-structure","id":"sidebar-nav-item-0"},{"title":"API Features","routes":[{"title":"Consistency Modes","path":"features/consistency","filePath":"../content/api-docs/features/consistency.mdx","fullPath":"/consul/api-docs/features/consistency","id":"sidebar-nav-item-2"},{"title":"Blocking Queries","path":"features/blocking","filePath":"../content/api-docs/features/blocking.mdx","fullPath":"/consul/api-docs/features/blocking","id":"sidebar-nav-item-3"},{"title":"Filtering","path":"features/filtering","filePath":"../content/api-docs/features/filtering.mdx","fullPath":"/consul/api-docs/features/filtering","id":"sidebar-nav-item-4"},{"title":"Agent Caching","path":"features/caching","filePath":"../content/api-docs/features/caching.mdx","fullPath":"/consul/api-docs/features/caching","id":"sidebar-nav-item-5"}],"id":"sidebar-nav-item-1"},{"divider":true,"id":"sidebar-nav-item-6"},{"title":"ACLs","routes":[{"title":"Overview","path":"acl","filePath":"../content/api-docs/acl/index.mdx","fullPath":"/consul/api-docs/acl","id":"sidebar-nav-item-8"},{"title":"Tokens","path":"acl/tokens","filePath":"../content/api-docs/acl/tokens.mdx","fullPath":"/consul/api-docs/acl/tokens","id":"sidebar-nav-item-9"},{"title":"Policies","path":"acl/policies","filePath":"../content/api-docs/acl/policies.mdx","fullPath":"/consul/api-docs/acl/policies","id":"sidebar-nav-item-10"},{"title":"Templated Policies","path":"acl/templated-policies","filePath":"../content/api-docs/acl/templated-policies.mdx","fullPath":"/consul/api-docs/acl/templated-policies","id":"sidebar-nav-item-11"},{"title":"Roles","path":"acl/roles","filePath":"../content/api-docs/acl/roles.mdx","fullPath":"/consul/api-docs/acl/roles","id":"sidebar-nav-item-12"},{"title":"Auth Methods","path":"acl/auth-methods","filePath":"../content/api-docs/acl/auth-methods.mdx","fullPath":"/consul/api-docs/acl/auth-methods","id":"sidebar-nav-item-13"},{"title":"Binding Rules","path":"acl/binding-rules","filePath":"../content/api-docs/acl/binding-rules.mdx","fullPath":"/consul/api-docs/acl/binding-rules","id":"sidebar-nav-item-14"}],"id":"sidebar-nav-item-7"},{"title":"Admin Partitions","path":"admin-partitions","filePath":"../content/api-docs/admin-partitions.mdx","fullPath":"/consul/api-docs/admin-partitions","id":"sidebar-nav-item-15"},{"title":"Agent","routes":[{"title":"Overview","path":"agent","filePath":"../content/api-docs/agent/index.mdx","fullPath":"/consul/api-docs/agent","id":"sidebar-nav-item-17"},{"title":"Checks","path":"agent/check","filePath":"../content/api-docs/agent/check.mdx","fullPath":"/consul/api-docs/agent/check","id":"sidebar-nav-item-18"},{"title":"Services","path":"agent/service","filePath":"../content/api-docs/agent/service.mdx","fullPath":"/consul/api-docs/agent/service","id":"sidebar-nav-item-19"},{"title":"Connect","path":"agent/connect","filePath":"../content/api-docs/agent/connect.mdx","fullPath":"/consul/api-docs/agent/connect","id":"sidebar-nav-item-20"}],"id":"sidebar-nav-item-16"},{"title":"Catalog","path":"catalog","filePath":"../content/api-docs/catalog.mdx","fullPath":"/consul/api-docs/catalog","id":"sidebar-nav-item-21"},{"title":"Cluster Peering","path":"peering","filePath":"../content/api-docs/peering.mdx","fullPath":"/consul/api-docs/peering","id":"sidebar-nav-item-22"},{"title":"Config","path":"config","filePath":"../content/api-docs/config.mdx","fullPath":"/consul/api-docs/config","id":"sidebar-nav-item-23"},{"title":"Connect","routes":[{"title":"Overview","path":"connect","filePath":"../content/api-docs/connect/index.mdx","fullPath":"/consul/api-docs/connect","id":"sidebar-nav-item-25"},{"title":"Certificate Authority (CA)","path":"connect/ca","filePath":"../content/api-docs/connect/ca.mdx","fullPath":"/consul/api-docs/connect/ca","id":"sidebar-nav-item-26"},{"title":"Intentions","path":"connect/intentions","filePath":"../content/api-docs/connect/intentions.mdx","fullPath":"/consul/api-docs/connect/intentions","id":"sidebar-nav-item-27"}],"id":"sidebar-nav-item-24"},{"title":"Coordinates","path":"coordinate","filePath":"../content/api-docs/coordinate.mdx","fullPath":"/consul/api-docs/coordinate","id":"sidebar-nav-item-28"},{"title":"Discovery Chain","path":"discovery-chain","filePath":"../content/api-docs/discovery-chain.mdx","fullPath":"/consul/api-docs/discovery-chain","id":"sidebar-nav-item-29"},{"title":"Events","path":"event","filePath":"../content/api-docs/event.mdx","fullPath":"/consul/api-docs/event","id":"sidebar-nav-item-30"},{"title":"Exported Services","path":"exported-services","filePath":"../content/api-docs/exported-services.mdx","fullPath":"/consul/api-docs/exported-services","id":"sidebar-nav-item-31"},{"title":"HCP Consul Central Link","path":"hcp-link","filePath":"../content/api-docs/hcp-link.mdx","fullPath":"/consul/api-docs/hcp-link","id":"sidebar-nav-item-32"},{"title":"Health","path":"health","filePath":"../content/api-docs/health.mdx","fullPath":"/consul/api-docs/health","id":"sidebar-nav-item-33"},{"title":"KV Store","path":"kv","filePath":"../content/api-docs/kv.mdx","fullPath":"/consul/api-docs/kv","id":"sidebar-nav-item-34"},{"title":"Operator","routes":[{"title":"Overview","path":"operator","filePath":"../content/api-docs/operator/index.mdx","fullPath":"/consul/api-docs/operator","id":"sidebar-nav-item-36"},{"title":"Area","path":"operator/area","filePath":"../content/api-docs/operator/area.mdx","fullPath":"/consul/api-docs/operator/area","id":"sidebar-nav-item-37"},{"title":"Autopilot","path":"operator/autopilot","filePath":"../content/api-docs/operator/autopilot.mdx","fullPath":"/consul/api-docs/operator/autopilot","id":"sidebar-nav-item-38"},{"title":"Keyring","path":"operator/keyring","filePath":"../content/api-docs/operator/keyring.mdx","fullPath":"/consul/api-docs/operator/keyring","id":"sidebar-nav-item-39"},{"title":"License","path":"operator/license","filePath":"../content/api-docs/operator/license.mdx","fullPath":"/consul/api-docs/operator/license","id":"sidebar-nav-item-40"},{"title":"Raft","path":"operator/raft","filePath":"../content/api-docs/operator/raft.mdx","fullPath":"/consul/api-docs/operator/raft","id":"sidebar-nav-item-41"},{"title":"Segment","path":"operator/segment","filePath":"../content/api-docs/operator/segment.mdx","fullPath":"/consul/api-docs/operator/segment","id":"sidebar-nav-item-42"},{"title":"Usage","path":"operator/usage","filePath":"../content/api-docs/operator/usage.mdx","fullPath":"/consul/api-docs/operator/usage","id":"sidebar-nav-item-43"}],"id":"sidebar-nav-item-35"},{"title":"Namespaces","path":"namespaces","filePath":"../content/api-docs/namespaces.mdx","fullPath":"/consul/api-docs/namespaces","id":"sidebar-nav-item-44"},{"title":"Prepared Queries","path":"query","filePath":"../content/api-docs/query.mdx","fullPath":"/consul/api-docs/query","id":"sidebar-nav-item-45"},{"title":"Sessions","path":"session","filePath":"../content/api-docs/session.mdx","fullPath":"/consul/api-docs/session","id":"sidebar-nav-item-46"},{"title":"Snapshots","path":"snapshot","filePath":"../content/api-docs/snapshot.mdx","fullPath":"/consul/api-docs/snapshot","id":"sidebar-nav-item-47"},{"title":"Status","path":"status","filePath":"../content/api-docs/status.mdx","fullPath":"/consul/api-docs/status","id":"sidebar-nav-item-48"},{"title":"Transactions","path":"txn","filePath":"../content/api-docs/txn.mdx","fullPath":"/consul/api-docs/txn","id":"sidebar-nav-item-49"},{"divider":true,"id":"sidebar-nav-item-50"},{"title":"Libraries &amp; SDKs","path":"libraries-and-sdks","filePath":"../content/api-docs/libraries-and-sdks.mdx","fullPath":"/consul/api-docs/libraries-and-sdks","id":"sidebar-nav-item-51"}],"title":"API","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/consul/blob/main/website/../content/api-docs/features/consistency.mdx"},"metadata":{"title":"Consistency Modes","description":"Every Consul HTTP API read request uses one of several \"consistency modes\" that offer different levels of response consistency and performance. By default, Consul uses a consistency mode that is suitable for most use cases. Users can override consistency modes to fine-tune these trade-offs for their own use case.","layout":null},"outlineItems":[{"title":"Consistency Modes","url":"#consistency-modes","dataHeapTrack":"toc-list-item-index-0"},{"title":"What is Consistency?","url":"#what-is-consistency","dataHeapTrack":"toc-list-item-index-1"},{"title":"Available Consistency Modes","url":"#available-consistency-modes","dataHeapTrack":"toc-list-item-index-2"},{"title":"Usage","url":"#usage","dataHeapTrack":"toc-list-item-index-3"}],"pageHeading":{"id":"consistency-modes","title":"Consistency Modes"},"mdxSource":{"compiledSource":"const makeShortcode=name=>function MDXDefaultShortcode(props){console.warn(\"Component \"+name+\" was not imported, exported, or provided by MDXProvider as global scope\");return mdx(\"div\",props)};const Tabs=makeShortcode(\"Tabs\");const Tab=makeShortcode(\"Tab\");const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`Every Consul HTTP API read request uses one of several `,mdx(\"em\",{parentName:\"p\"},`consistency modes`),` that offer\ndifferent levels of response consistency and performance. By default, Consul uses a\nconsistency mode that is suitable for most use cases. Users can override consistency modes\nto fine-tune these trade-offs for their own use case at two levels:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Per interface (HTTP API, DNS)`),mdx(\"li\",{parentName:\"ul\"},`Per request (HTTP API requests only)`)),mdx(\"h2\",{\"id\":\"what-is-consistency\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#what-is-consistency\",\"aria-label\":\"what is consistency permalink\"},`\\xbb`),`What is Consistency?`),mdx(\"p\",null,`Consul servers are responsible for maintaining state information like the registration and\nhealth status of services and nodes. To protect this state against the potential failure of\nConsul servers, this state is replicated across three or more Consul servers in production using a\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/architecture/consensus\"},`consensus protocol`),`.`),mdx(\"p\",null,`One Consul server is elected leader and acts as the ultimate authority on Consul's state.\nIf a majority of Consul servers agree to a state change, the leader is responsible for recording\nthe change and then distributing it to the non-leader Consul servers—known as followers.\nBecause it takes time for a state change on the leader to propagate to the followers,\nfollowers may have a slightly outdated, or \"stale\", view of Consul's state.`),mdx(\"p\",null,`If a read request is handled by the current leader, the response is guaranteed to be\nfully `,mdx(\"em\",{parentName:\"p\"},`consistent`),` (as up-to-date as possible).\nIf the same request were handled by a follower, the response may be less consistent:\nbased on a `,mdx(\"em\",{parentName:\"p\"},`stale`),` (outdated) copy of the leader's state.\nConsistency is highest if the response comes from the leader.\nBut ensuring only the leader can respond to the request prevents spreading\nread request load across all Consul servers.`),mdx(\"p\",null,`The consistency mode controls which Consul servers can respond to read requests,\nenabling control over this inherent trade-off between consistency and performance.`),mdx(\"h2\",{\"id\":\"available-consistency-modes\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#available-consistency-modes\",\"aria-label\":\"available consistency modes permalink\"},`\\xbb`),`Available Consistency Modes`),mdx(\"p\",null,`Each HTTP API endpoint documents its support for the three read consistency modes:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"stale\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#stale\",\"aria-label\":\"stale permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`stale`)),` -\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#consul-dns-queries\"},`Consul DNS queries use `,mdx(\"inlineCode\",{parentName:\"a\"},`stale`),` mode by default`),`.\nThis mode allows any server to handle the read regardless of whether it is the leader.\nThe trade-off is very fast and scalable reads with a higher likelihood of stale values.\nResults are generally consistent to within 50 milliseconds of the leader,\nthough there is no upper limit on this staleness.\nSince this mode allows reads without a leader,\na cluster that is unavailable (no quorum) can still respond to queries.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"default\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#default\",\"aria-label\":\"default permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`default`)),` -\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#consul-http-api-queries\"},`Consul HTTP API queries use `,mdx(\"inlineCode\",{parentName:\"a\"},`default`),` mode by default`),`.\nIt is strongly consistent in almost all cases.\nHowever, there is a small window in which a new leader may be elected\nduring which the old leader may respond with stale values.\nThe trade-off is fast reads but potentially stale values.\nThe condition resulting in stale reads is hard to trigger,\nand most clients should not need to worry about this case.\nAlso, note that this race condition only applies to reads, not writes.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"consistent\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#consistent\",\"aria-label\":\"consistent permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`consistent`)),` -\nThis mode is strongly consistent without caveats.\nIt requires that a leader verify with a quorum of peers that it is still leader.\nThis introduces an additional round-trip to all server nodes.\nThe trade-off is increased latency due to an extra round trip.\nMost clients should not use this unless they cannot tolerate a stale read.`))),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Scaling read requests`),`: The most effective way to increase read scalability\nis to convert non-`,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads to `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads. If most requests are already\n`,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads and additional load reduction is desired, use Consul Enterprise\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/enterprise/redundancy\"},`redundancy zones`),` or\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/enterprise/read-scale\"},`read replicas`),`\nto spread `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads across additional, `,mdx(\"em\",{parentName:\"p\"},`non-voting`),` Consul servers.\nNon-voting servers enhance read scalability without increasing the number\nof voting servers; adding more then 5 voting servers is not recommended because\nit decreases Consul's performance.`)),mdx(\"h3\",{\"id\":\"intra-datacenter-request-behavior\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#intra-datacenter-request-behavior\",\"aria-label\":\"intra datacenter request behavior permalink\"},`\\xbb`),`Intra-Datacenter Request Behavior`),mdx(\"p\",null,`The following diagrams show how the intra-datacenter request path varies\nper consistency mode and the relative trade-offs between level of consistency and performance.`),mdx(Tabs,{mdxType:\"Tabs\"},mdx(Tab,{heading:\"Stale reads\",mdxType:\"Tab\"},mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/img/consistency-modes/consistency-mode-stale.png\"},mdx(\"img\",{parentName:\"a\",\"src\":\"/img/consistency-modes/consistency-mode-stale.png\",\"alt\":\"stale consistency mode read request path\"})))),mdx(Tab,{heading:\"Default reads\",mdxType:\"Tab\"},mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/img/consistency-modes/consistency-mode-default.png\"},mdx(\"img\",{parentName:\"a\",\"src\":\"/img/consistency-modes/consistency-mode-default.png\",\"alt\":\"default consistency mode read request path\"})))),mdx(Tab,{heading:\"Consistent reads, all writes\",mdxType:\"Tab\"},mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/img/consistency-modes/consistency-mode-consistent.png\"},mdx(\"img\",{parentName:\"a\",\"src\":\"/img/consistency-modes/consistency-mode-consistent.png\",\"alt\":\"consistent consistency mode read, any write request path\"}))))),mdx(\"h3\",{\"id\":\"cross-datacenter-request-behavior\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#cross-datacenter-request-behavior\",\"aria-label\":\"cross datacenter request behavior permalink\"},`\\xbb`),`Cross-Datacenter Request Behavior`),mdx(\"p\",null,`When making a request across federated Consul datacenters, requests are forwarded from\na local server to any remote server. Once in the remote datacenter, the request path\nis the same as a `,mdx(\"a\",{parentName:\"p\",\"href\":\"#intra-datacenter-request-behavior\"},`local request with the same consistency mode`),`.\nThe following diagrams show the cross-datacenter request paths when Consul servers in datacenters are\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/gateways/mesh-gateway/wan-federation-via-mesh-gateways\"},`federated either directly or via mesh gateways`),`.`),mdx(Tabs,{mdxType:\"Tabs\"},mdx(Tab,{heading:\"Traditional WAN federation\",mdxType:\"Tab\"},mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/img/consistency-modes/consistency-mode-cross-datacenter-federation-traditional.png\"},mdx(\"img\",{parentName:\"a\",\"src\":\"/img/consistency-modes/consistency-mode-cross-datacenter-federation-traditional.png\",\"alt\":\"consistency mode behavior across Consul datacenters with traditional WAN federation\"})))),mdx(Tab,{heading:\"WAN federation via mesh gateways\",mdxType:\"Tab\"},mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/img/consistency-modes/consistency-mode-cross-datacenter-federation-mesh-gateways.png\"},mdx(\"img\",{parentName:\"a\",\"src\":\"/img/consistency-modes/consistency-mode-cross-datacenter-federation-mesh-gateways.png\",\"alt\":\"consistency mode behavior across Consul datacenters with WAN federation via mesh gateways\"}))))),mdx(\"h2\",{\"id\":\"usage\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#usage\",\"aria-label\":\"usage permalink\"},`\\xbb`),`Usage`),mdx(\"h3\",{\"id\":\"consul-dns-queries\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#consul-dns-queries\",\"aria-label\":\"consul dns queries permalink\"},`\\xbb`),`Consul DNS Queries`),mdx(\"p\",null,`When DNS queries are issued to `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/services/discovery/dns-overview\"},`Consul's DNS interface`),`,\nConsul uses the `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` consistency mode by default when interfacing with its\nunderlying Consul service discovery HTTP APIs\n(`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/api-docs/catalog\"},`Catalog`),`, `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/api-docs/health\"},`Health`),`, and `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/api-docs/query\"},`Prepared Query`),`).`),mdx(\"p\",null,`The consistency mode underlying Consul DNS queries cannot be overridden on a\nper-request basis.`),mdx(\"h4\",{\"id\":\"changing-the-default-consistency-mode\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#changing-the-default-consistency-mode\",\"aria-label\":\"changing the default consistency mode permalink\"},`\\xbb`),`Changing the Default Consistency Mode`),mdx(\"p\",null,`If stronger consistency is required at the expense of increased latency,\nset `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#allow_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.allow_stale`)),` to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),` to make Consul use the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` consistency mode instead of `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),`\nwhen interfacing with the underlying Consul service discovery HTTP APIs.`),mdx(\"h4\",{\"id\":\"limiting-staleness-advanced-usage\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#limiting-staleness-advanced-usage\",\"aria-label\":\"limiting staleness advanced usage permalink\"},`\\xbb`),`Limiting Staleness (Advanced Usage)`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Caution`),`:\nConfiguring `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),` may result in a prolonged outage\nif your Consul servers become overloaded.\nWe do not recommend using this setting to limit staleness\nunless it would be preferable for your services to be unavailable\nthan to receive results that are too stale.\nIf bounded result consistency is required by a service, consider\nmodifying the service to use `,mdx(\"inlineCode\",{parentName:\"p\"},`consistent`),` service discovery HTTP API queries\ninstead of DNS lookups.`)),mdx(\"p\",null,`If Consul is configured to respond to DNS queries in `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` consistency mode\n(`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#allow_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.allow_stale`)),` is `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`),\nyou can set an upper limit on how stale a response is allowed to be by\nconfiguring `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),`.\nWhen the Consul agent handling the response is behind the leader by more than `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),` time,\nthe request will be forwarded to the leader for handling as in `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` consistency mode.`),mdx(\"p\",null,`A common cause for response staleness exceeding `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),` is that\nConsul servers are overloaded by requests. Under these circumstances, `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),`\nwill make the overloading worse by converting cheap `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads to more expensive `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` reads.`),mdx(\"h3\",{\"id\":\"consul-http-api-queries\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#consul-http-api-queries\",\"aria-label\":\"consul http api queries permalink\"},`\\xbb`),`Consul HTTP API Queries`),mdx(\"p\",null,`All HTTP API read requests use the `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` consistency mode by default\nunless `,mdx(\"a\",{parentName:\"p\",\"href\":\"#overriding-a-request-s-consistency-mode\"},`overridden on a per-request basis`),`.\nWe do `,mdx(\"a\",{parentName:\"p\",\"href\":\"#changing-the-default-consistency-mode-advanced-usage\"},`not recommend changing the consistency mode used by default`),`.`),mdx(\"p\",null,`Write requests do not support defining a consistency mode.\nAll writes follow the behavior of the `,mdx(\"inlineCode\",{parentName:\"p\"},`consistent`),` consistency mode.`),mdx(\"h4\",{\"id\":\"overriding-a-request-s-consistency-mode\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#overriding-a-request-s-consistency-mode\",\"aria-label\":\"overriding a request s consistency mode permalink\"},`\\xbb`),`Overriding a Request's Consistency Mode`),mdx(\"p\",null,`The HTTP API documentation for each endpoint lists which consistency modes can be used\nto override the default on a per-request basis. To use a supported consistency mode\nother than the default, include the desired consistency mode as a URL query parameter\nwhen calling the endpoint:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"stale-1\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#stale-1\",\"aria-label\":\"stale permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`stale`)),`: Use the `,mdx(\"inlineCode\",{parentName:\"li\"},`stale`),` query parameter`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"consistent-1\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#consistent-1\",\"aria-label\":\"consistent permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`consistent`)),`: Use the `,mdx(\"inlineCode\",{parentName:\"li\"},`consistent`),` query parameter`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"default-1\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#default-1\",\"aria-label\":\"default permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`default`)),`: Use the `,mdx(\"inlineCode\",{parentName:\"li\"},`leader`),` query parameter;\nonly relevant `,mdx(\"a\",{parentName:\"li\",\"href\":\"#changing-the-default-consistency-mode-advanced-usage\"},`if the default consistency mode is changed to `,mdx(\"inlineCode\",{parentName:\"a\"},`stale`)))),mdx(\"h4\",{\"id\":\"changing-the-default-consistency-mode-advanced-usage\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#changing-the-default-consistency-mode-advanced-usage\",\"aria-label\":\"changing the default consistency mode advanced usage permalink\"},`\\xbb`),`Changing the Default Consistency Mode (Advanced Usage)`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Caution`),`:\nConfiguring `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),` may result in a prolonged outage\nif your Consul servers become overloaded.\nWe do not recommend using this setting to limit staleness\nunless it would be preferable for your services to be unavailable\nthan to receive results that are too stale.\nIf bounded result consistency is required by a service, consider\nmodifying the service to use `,mdx(\"inlineCode\",{parentName:\"p\"},`consistent`),` mode\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#overriding-a-request-s-consistency-mode\"},`on a per-request basis`),`.`)),mdx(\"p\",null,`The default consistency mode can be changed to `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` for service discovery HTTP API endpoints,\nincluding:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/api-docs/catalog\"},`Catalog API`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/api-docs/health\"},`Health API`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/api-docs/query\"},`Prepared Query API`))),mdx(\"p\",null,`This allows Consul operators to spread service discovery read load across Consul servers\nwith a centralized configuration change, avoiding the need to modify every service to\nexplicitly set `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` consistency mode in their requests.\nServices can still override this default on a per-request basis by\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#overriding-a-request-s-consistency-mode\"},`specifying a supported consistency mode as a query parameter in the request`),`.`),mdx(\"p\",null,`To configure Consul servers that receive service discovery requests to use `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),`\nconsistency mode unless overridden,\nset `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),` to a value greater than zero in their agent configuration.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` consistency mode will be used by default unless the data is sufficiently stale:\nits Raft log's index is more than `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),` indices behind the leader's.\nSetting a positive value for `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),`\nis analogous to `,mdx(\"a\",{parentName:\"p\",\"href\":\"#limiting-staleness-advanced-usage\"},`limiting the staleness of Consul DNS queries`),`\nby setting `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`dns_config.max_stale`)),`.`),mdx(\"p\",null,`A common cause for response staleness exceeding `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),` is that\nConsul servers are overloaded by requests. Under these circumstances, `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#discovery_max_stale\"},mdx(\"inlineCode\",{parentName:\"a\"},`discovery_max_stale`)),`\nwill make the overloading worse by converting cheap `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` reads to more expensive `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` reads.`),mdx(\"h3\",{\"id\":\"visibility-into-response-staleness\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#visibility-into-response-staleness\",\"aria-label\":\"visibility into response staleness permalink\"},`\\xbb`),`Visibility into Response Staleness`),mdx(\"p\",null,`To support bounding the acceptable staleness of data, responses provide the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`X-Consul-LastContact`),` header containing the time in milliseconds that a server\nwas last contacted by the leader node. The `,mdx(\"inlineCode\",{parentName:\"p\"},`X-Consul-KnownLeader`),` header also\nindicates if there is a known leader. These can be used by clients to gauge the\nstaleness of a result and take appropriate action.`),mdx(\"h3\",{\"id\":\"visibility-into-consistency-mode-used\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#visibility-into-consistency-mode-used\",\"aria-label\":\"visibility into consistency mode used permalink\"},`\\xbb`),`Visibility into Consistency Mode Used`),mdx(\"p\",null,`The Consul DNS and HTTP API interfaces allow setting the consistency mode\nat different levels (interface and per-request).\nAdvanced settings for the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#limiting-staleness-advanced-usage\"},`DNS`),` and\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#changing-the-default-consistency-mode-advanced-usage\"},`HTTP API`),` interfaces can even\ncause the consistency mode to change from `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` to `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` if results are sufficiently stale.`),mdx(\"p\",null,`To understand the consistency mode used for a particular HTTP API request,\ncheck the `,mdx(\"inlineCode\",{parentName:\"p\"},`X-Consul-Effective-Consistency`),` response header.\nThe value of the header matches the\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#overriding-a-request-s-consistency-mode\"},`name of the query parameter associated with the consistency mode`),`.\nIn the following example, the header shows that the `,mdx(\"inlineCode\",{parentName:\"p\"},`default`),` consistency mode was used.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token function\"},`curl`),` --include `,mdx(\"span\",{parentName:\"span\",\"className\":\"token variable\"},`$CONSUL_HTTP_ADDR`),`/v1/catalog/services`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`HTTP/1.1 200 OK`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`Content-Type: application/json`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`...`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`X-Consul-Effective-Consistency: leader`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`X-Consul-KnownLeader: true`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`X-Consul-LastContact: 0`),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`{`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`  \"redis\": [],`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`  \"postgresql\": [\"primary\", \"secondary\"]`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token output\"},`}`),`\n`)),mdx(\"p\",null,`The DNS interface does not support viewing the consistency mode used for a particular query.`),mdx(\"h3\",{\"id\":\"relationship-to-request-caching\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#relationship-to-request-caching\",\"aria-label\":\"relationship to request caching permalink\"},`\\xbb`),`Relationship to Request Caching`),mdx(\"p\",null,`Note that some HTTP API endpoints support a `,mdx(\"inlineCode\",{parentName:\"p\"},`cached`),` parameter which has some of the same\nsemantics as `,mdx(\"inlineCode\",{parentName:\"p\"},`stale`),` consistency mode but different trade offs. This behavior is described in\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/api-docs/features/caching\"},`agent caching feature documentation`)))};MDXContent.isMDXComponent=true;","scope":{"version":"latest"}},"product":{"name":"Consul","slug":"consul","algoliaConfig":{"indexName":"product_CONSUL","searchOnlyApiKey":"fbd5dc1f0078d41509fcc560386fd534"},"analyticsConfig":{"includedDomains":"consul.io www.consul.io","segmentWriteKey":"IyzLrqXkox5KJ8XL4fo8vTYNGfiKlTCm"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Consul by HashiCorp","description":"Consul is a service networking solution to automate network configurations, discover services, and enable secure connectivity across any cloud or runtime.","image":"https://www.consulproject.io/consul-public/img/og-image.png","icon":[{"href":"/consul-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.11.3","subnavItems":[],"basePaths":["docs","api-docs","commands","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"CLI","path":"commands"}],"currentRootDocsPath":{"iconName":"api","name":"API","path":"api-docs"}},"projectName":null,"versions":null},"__N_SSG":true}