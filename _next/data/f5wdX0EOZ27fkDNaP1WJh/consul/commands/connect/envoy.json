{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Consul","url":"/consul"},{"title":"CLI","url":"/consul/commands","isCurrentPage":false},{"title":"connect","url":"/consul/commands/connect"},{"title":"envoy","url":"/consul/commands/connect/envoy","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Consul Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Consul","fullPath":"/consul","theme":"consul"},{"title":"Install","fullPath":"/consul/install"},{"title":"Tutorials","fullPath":"/consul/tutorials"},{"title":"Documentation","fullPath":"/consul/docs"},{"title":"API","fullPath":"/consul/api-docs"},{"title":"CLI","fullPath":"/consul/commands"}],"showFilterInput":false,"title":"Consul","visuallyHideTitle":true},{"backToLinkProps":{"text":"Consul Home","href":"/consul"},"levelButtonProps":{"levelUpButtonText":"Consul Home"},"menuItems":[{"title":"CLI","fullPath":"/consul/commands","theme":"consul"},{"title":"acl","routes":[{"title":"Overview","path":"acl","filePath":"../content/commands/acl/index.mdx","fullPath":"/consul/commands/acl","id":"sidebar-nav-item-2"},{"title":"auth-method","routes":[{"title":"Overview","path":"acl/auth-method","filePath":"../content/commands/acl/auth-method/index.mdx","fullPath":"/consul/commands/acl/auth-method","id":"sidebar-nav-item-4"},{"title":"create","path":"acl/auth-method/create","filePath":"../content/commands/acl/auth-method/create.mdx","fullPath":"/consul/commands/acl/auth-method/create","id":"sidebar-nav-item-5"},{"title":"delete","path":"acl/auth-method/delete","filePath":"../content/commands/acl/auth-method/delete.mdx","fullPath":"/consul/commands/acl/auth-method/delete","id":"sidebar-nav-item-6"},{"title":"list","path":"acl/auth-method/list","filePath":"../content/commands/acl/auth-method/list.mdx","fullPath":"/consul/commands/acl/auth-method/list","id":"sidebar-nav-item-7"},{"title":"read","path":"acl/auth-method/read","filePath":"../content/commands/acl/auth-method/read.mdx","fullPath":"/consul/commands/acl/auth-method/read","id":"sidebar-nav-item-8"},{"title":"update","path":"acl/auth-method/update","filePath":"../content/commands/acl/auth-method/update.mdx","fullPath":"/consul/commands/acl/auth-method/update","id":"sidebar-nav-item-9"}],"id":"sidebar-nav-item-3"},{"title":"binding-rule","routes":[{"title":"Overview","path":"acl/binding-rule","filePath":"../content/commands/acl/binding-rule/index.mdx","fullPath":"/consul/commands/acl/binding-rule","id":"sidebar-nav-item-11"},{"title":"create","path":"acl/binding-rule/create","filePath":"../content/commands/acl/binding-rule/create.mdx","fullPath":"/consul/commands/acl/binding-rule/create","id":"sidebar-nav-item-12"},{"title":"delete","path":"acl/binding-rule/delete","filePath":"../content/commands/acl/binding-rule/delete.mdx","fullPath":"/consul/commands/acl/binding-rule/delete","id":"sidebar-nav-item-13"},{"title":"list","path":"acl/binding-rule/list","filePath":"../content/commands/acl/binding-rule/list.mdx","fullPath":"/consul/commands/acl/binding-rule/list","id":"sidebar-nav-item-14"},{"title":"read","path":"acl/binding-rule/read","filePath":"../content/commands/acl/binding-rule/read.mdx","fullPath":"/consul/commands/acl/binding-rule/read","id":"sidebar-nav-item-15"},{"title":"update","path":"acl/binding-rule/update","filePath":"../content/commands/acl/binding-rule/update.mdx","fullPath":"/consul/commands/acl/binding-rule/update","id":"sidebar-nav-item-16"}],"id":"sidebar-nav-item-10"},{"title":"bootstrap","path":"acl/bootstrap","filePath":"../content/commands/acl/bootstrap.mdx","fullPath":"/consul/commands/acl/bootstrap","id":"sidebar-nav-item-17"},{"title":"policy","routes":[{"title":"Overview","path":"acl/policy","filePath":"../content/commands/acl/policy/index.mdx","fullPath":"/consul/commands/acl/policy","id":"sidebar-nav-item-19"},{"title":"create","path":"acl/policy/create","filePath":"../content/commands/acl/policy/create.mdx","fullPath":"/consul/commands/acl/policy/create","id":"sidebar-nav-item-20"},{"title":"delete","path":"acl/policy/delete","filePath":"../content/commands/acl/policy/delete.mdx","fullPath":"/consul/commands/acl/policy/delete","id":"sidebar-nav-item-21"},{"title":"list","path":"acl/policy/list","filePath":"../content/commands/acl/policy/list.mdx","fullPath":"/consul/commands/acl/policy/list","id":"sidebar-nav-item-22"},{"title":"read","path":"acl/policy/read","filePath":"../content/commands/acl/policy/read.mdx","fullPath":"/consul/commands/acl/policy/read","id":"sidebar-nav-item-23"},{"title":"update","path":"acl/policy/update","filePath":"../content/commands/acl/policy/update.mdx","fullPath":"/consul/commands/acl/policy/update","id":"sidebar-nav-item-24"}],"id":"sidebar-nav-item-18"},{"title":"templated policy","routes":[{"title":"Overview","path":"acl/templated-policy","filePath":"../content/commands/acl/templated-policy/index.mdx","fullPath":"/consul/commands/acl/templated-policy","id":"sidebar-nav-item-26"},{"title":"list","path":"acl/templated-policy/list","filePath":"../content/commands/acl/templated-policy/list.mdx","fullPath":"/consul/commands/acl/templated-policy/list","id":"sidebar-nav-item-27"},{"title":"preview","path":"acl/templated-policy/preview","filePath":"../content/commands/acl/templated-policy/preview.mdx","fullPath":"/consul/commands/acl/templated-policy/preview","id":"sidebar-nav-item-28"},{"title":"read","path":"acl/templated-policy/read","filePath":"../content/commands/acl/templated-policy/read.mdx","fullPath":"/consul/commands/acl/templated-policy/read","id":"sidebar-nav-item-29"}],"id":"sidebar-nav-item-25"},{"title":"role","routes":[{"title":"Overview","path":"acl/role","filePath":"../content/commands/acl/role/index.mdx","fullPath":"/consul/commands/acl/role","id":"sidebar-nav-item-31"},{"title":"create","path":"acl/role/create","filePath":"../content/commands/acl/role/create.mdx","fullPath":"/consul/commands/acl/role/create","id":"sidebar-nav-item-32"},{"title":"delete","path":"acl/role/delete","filePath":"../content/commands/acl/role/delete.mdx","fullPath":"/consul/commands/acl/role/delete","id":"sidebar-nav-item-33"},{"title":"list","path":"acl/role/list","filePath":"../content/commands/acl/role/list.mdx","fullPath":"/consul/commands/acl/role/list","id":"sidebar-nav-item-34"},{"title":"read","path":"acl/role/read","filePath":"../content/commands/acl/role/read.mdx","fullPath":"/consul/commands/acl/role/read","id":"sidebar-nav-item-35"},{"title":"update","path":"acl/role/update","filePath":"../content/commands/acl/role/update.mdx","fullPath":"/consul/commands/acl/role/update","id":"sidebar-nav-item-36"}],"id":"sidebar-nav-item-30"},{"title":"set-agent-token","path":"acl/set-agent-token","filePath":"../content/commands/acl/set-agent-token.mdx","fullPath":"/consul/commands/acl/set-agent-token","id":"sidebar-nav-item-37"},{"title":"token","routes":[{"title":"Overview","path":"acl/token","filePath":"../content/commands/acl/token/index.mdx","fullPath":"/consul/commands/acl/token","id":"sidebar-nav-item-39"},{"title":"clone","path":"acl/token/clone","filePath":"../content/commands/acl/token/clone.mdx","fullPath":"/consul/commands/acl/token/clone","id":"sidebar-nav-item-40"},{"title":"create","path":"acl/token/create","filePath":"../content/commands/acl/token/create.mdx","fullPath":"/consul/commands/acl/token/create","id":"sidebar-nav-item-41"},{"title":"delete","path":"acl/token/delete","filePath":"../content/commands/acl/token/delete.mdx","fullPath":"/consul/commands/acl/token/delete","id":"sidebar-nav-item-42"},{"title":"list","path":"acl/token/list","filePath":"../content/commands/acl/token/list.mdx","fullPath":"/consul/commands/acl/token/list","id":"sidebar-nav-item-43"},{"title":"read","path":"acl/token/read","filePath":"../content/commands/acl/token/read.mdx","fullPath":"/consul/commands/acl/token/read","id":"sidebar-nav-item-44"},{"title":"update","path":"acl/token/update","filePath":"../content/commands/acl/token/update.mdx","fullPath":"/consul/commands/acl/token/update","id":"sidebar-nav-item-45"}],"id":"sidebar-nav-item-38"}],"id":"sidebar-nav-item-1"},{"title":"agent","path":"agent","filePath":"../content/commands/agent.mdx","fullPath":"/consul/commands/agent","id":"sidebar-nav-item-46"},{"title":"catalog","routes":[{"title":"Overview","path":"catalog","filePath":"../content/commands/catalog/index.mdx","fullPath":"/consul/commands/catalog","id":"sidebar-nav-item-48"},{"title":"datacenters","path":"catalog/datacenters","filePath":"../content/commands/catalog/datacenters.mdx","fullPath":"/consul/commands/catalog/datacenters","id":"sidebar-nav-item-49"},{"title":"nodes","path":"catalog/nodes","filePath":"../content/commands/catalog/nodes.mdx","fullPath":"/consul/commands/catalog/nodes","id":"sidebar-nav-item-50"},{"title":"services","path":"catalog/services","filePath":"../content/commands/catalog/services.mdx","fullPath":"/consul/commands/catalog/services","id":"sidebar-nav-item-51"}],"id":"sidebar-nav-item-47"},{"title":"config","routes":[{"title":"Overview","path":"config","filePath":"../content/commands/config/index.mdx","fullPath":"/consul/commands/config","id":"sidebar-nav-item-53"},{"title":"delete","path":"config/delete","filePath":"../content/commands/config/delete.mdx","fullPath":"/consul/commands/config/delete","id":"sidebar-nav-item-54"},{"title":"list","path":"config/list","filePath":"../content/commands/config/list.mdx","fullPath":"/consul/commands/config/list","id":"sidebar-nav-item-55"},{"title":"read","path":"config/read","filePath":"../content/commands/config/read.mdx","fullPath":"/consul/commands/config/read","id":"sidebar-nav-item-56"},{"title":"write","path":"config/write","filePath":"../content/commands/config/write.mdx","fullPath":"/consul/commands/config/write","id":"sidebar-nav-item-57"}],"id":"sidebar-nav-item-52"},{"title":"connect","routes":[{"title":"Overview","path":"connect","filePath":"../content/commands/connect/index.mdx","fullPath":"/consul/commands/connect","id":"sidebar-nav-item-59"},{"title":"ca","path":"connect/ca","filePath":"../content/commands/connect/ca.mdx","fullPath":"/consul/commands/connect/ca","id":"sidebar-nav-item-60"},{"title":"proxy","path":"connect/proxy","filePath":"../content/commands/connect/proxy.mdx","fullPath":"/consul/commands/connect/proxy","id":"sidebar-nav-item-61"},{"title":"envoy","path":"connect/envoy","filePath":"../content/commands/connect/envoy.mdx","fullPath":"/consul/commands/connect/envoy","id":"sidebar-nav-item-62"},{"title":"expose","path":"connect/expose","filePath":"../content/commands/connect/expose.mdx","fullPath":"/consul/commands/connect/expose","id":"sidebar-nav-item-63"},{"title":"redirect-traffic","path":"connect/redirect-traffic","filePath":"../content/commands/connect/redirect-traffic.mdx","fullPath":"/consul/commands/connect/redirect-traffic","id":"sidebar-nav-item-64"}],"id":"sidebar-nav-item-58"},{"title":"debug","path":"debug","filePath":"../content/commands/debug.mdx","fullPath":"/consul/commands/debug","id":"sidebar-nav-item-65"},{"title":"event","path":"event","filePath":"../content/commands/event.mdx","fullPath":"/consul/commands/event","id":"sidebar-nav-item-66"},{"title":"exec","path":"exec","filePath":"../content/commands/exec.mdx","fullPath":"/consul/commands/exec","id":"sidebar-nav-item-67"},{"title":"force-leave","path":"force-leave","filePath":"../content/commands/force-leave.mdx","fullPath":"/consul/commands/force-leave","id":"sidebar-nav-item-68"},{"title":"info","path":"info","filePath":"../content/commands/info.mdx","fullPath":"/consul/commands/info","id":"sidebar-nav-item-69"},{"title":"intention","routes":[{"title":"Overview","path":"intention","filePath":"../content/commands/intention/index.mdx","fullPath":"/consul/commands/intention","id":"sidebar-nav-item-71"},{"title":"check","path":"intention/check","filePath":"../content/commands/intention/check.mdx","fullPath":"/consul/commands/intention/check","id":"sidebar-nav-item-72"},{"title":"create","path":"intention/create","filePath":"../content/commands/intention/create.mdx","fullPath":"/consul/commands/intention/create","id":"sidebar-nav-item-73"},{"title":"delete","path":"intention/delete","filePath":"../content/commands/intention/delete.mdx","fullPath":"/consul/commands/intention/delete","id":"sidebar-nav-item-74"},{"title":"get","path":"intention/get","filePath":"../content/commands/intention/get.mdx","fullPath":"/consul/commands/intention/get","id":"sidebar-nav-item-75"},{"title":"list","path":"intention/list","filePath":"../content/commands/intention/list.mdx","fullPath":"/consul/commands/intention/list","id":"sidebar-nav-item-76"},{"title":"match","path":"intention/match","filePath":"../content/commands/intention/match.mdx","fullPath":"/consul/commands/intention/match","id":"sidebar-nav-item-77"}],"id":"sidebar-nav-item-70"},{"title":"join","path":"join","filePath":"../content/commands/join.mdx","fullPath":"/consul/commands/join","id":"sidebar-nav-item-78"},{"title":"keygen","path":"keygen","filePath":"../content/commands/keygen.mdx","fullPath":"/consul/commands/keygen","id":"sidebar-nav-item-79"},{"title":"keyring","path":"keyring","filePath":"../content/commands/keyring.mdx","fullPath":"/consul/commands/keyring","id":"sidebar-nav-item-80"},{"title":"kv","routes":[{"title":"Overview","path":"kv","filePath":"../content/commands/kv/index.mdx","fullPath":"/consul/commands/kv","id":"sidebar-nav-item-82"},{"title":"delete","path":"kv/delete","filePath":"../content/commands/kv/delete.mdx","fullPath":"/consul/commands/kv/delete","id":"sidebar-nav-item-83"},{"title":"export","path":"kv/export","filePath":"../content/commands/kv/export.mdx","fullPath":"/consul/commands/kv/export","id":"sidebar-nav-item-84"},{"title":"get","path":"kv/get","filePath":"../content/commands/kv/get.mdx","fullPath":"/consul/commands/kv/get","id":"sidebar-nav-item-85"},{"title":"import","path":"kv/import","filePath":"../content/commands/kv/import.mdx","fullPath":"/consul/commands/kv/import","id":"sidebar-nav-item-86"},{"title":"put","path":"kv/put","filePath":"../content/commands/kv/put.mdx","fullPath":"/consul/commands/kv/put","id":"sidebar-nav-item-87"}],"id":"sidebar-nav-item-81"},{"title":"leave","path":"leave","filePath":"../content/commands/leave.mdx","fullPath":"/consul/commands/leave","id":"sidebar-nav-item-88"},{"title":"license","path":"license","filePath":"../content/commands/license.mdx","fullPath":"/consul/commands/license","id":"sidebar-nav-item-89"},{"title":"lock","path":"lock","filePath":"../content/commands/lock.mdx","fullPath":"/consul/commands/lock","id":"sidebar-nav-item-90"},{"title":"login","path":"login","filePath":"../content/commands/login.mdx","fullPath":"/consul/commands/login","id":"sidebar-nav-item-91"},{"title":"logout","path":"logout","filePath":"../content/commands/logout.mdx","fullPath":"/consul/commands/logout","id":"sidebar-nav-item-92"},{"title":"maint","path":"maint","filePath":"../content/commands/maint.mdx","fullPath":"/consul/commands/maint","id":"sidebar-nav-item-93"},{"title":"members","path":"members","filePath":"../content/commands/members.mdx","fullPath":"/consul/commands/members","id":"sidebar-nav-item-94"},{"title":"monitor","path":"monitor","filePath":"../content/commands/monitor.mdx","fullPath":"/consul/commands/monitor","id":"sidebar-nav-item-95"},{"title":"namespace","routes":[{"title":"Overview","path":"namespace","filePath":"../content/commands/namespace/index.mdx","fullPath":"/consul/commands/namespace","id":"sidebar-nav-item-97"},{"title":"create","path":"namespace/create","filePath":"../content/commands/namespace/create.mdx","fullPath":"/consul/commands/namespace/create","id":"sidebar-nav-item-98"},{"title":"delete","path":"namespace/delete","filePath":"../content/commands/namespace/delete.mdx","fullPath":"/consul/commands/namespace/delete","id":"sidebar-nav-item-99"},{"title":"list","path":"namespace/list","filePath":"../content/commands/namespace/list.mdx","fullPath":"/consul/commands/namespace/list","id":"sidebar-nav-item-100"},{"title":"read","path":"namespace/read","filePath":"../content/commands/namespace/read.mdx","fullPath":"/consul/commands/namespace/read","id":"sidebar-nav-item-101"},{"title":"update","path":"namespace/update","filePath":"../content/commands/namespace/update.mdx","fullPath":"/consul/commands/namespace/update","id":"sidebar-nav-item-102"},{"title":"write","path":"namespace/write","filePath":"../content/commands/namespace/write.mdx","fullPath":"/consul/commands/namespace/write","id":"sidebar-nav-item-103"}],"id":"sidebar-nav-item-96"},{"title":"operator","routes":[{"title":"Overview","path":"operator","filePath":"../content/commands/operator/index.mdx","fullPath":"/consul/commands/operator","id":"sidebar-nav-item-105"},{"title":"area","path":"operator/area","filePath":"../content/commands/operator/area.mdx","fullPath":"/consul/commands/operator/area","id":"sidebar-nav-item-106"},{"title":"autopilot","path":"operator/autopilot","filePath":"../content/commands/operator/autopilot.mdx","fullPath":"/consul/commands/operator/autopilot","id":"sidebar-nav-item-107"},{"title":"raft","path":"operator/raft","filePath":"../content/commands/operator/raft.mdx","fullPath":"/consul/commands/operator/raft","id":"sidebar-nav-item-108"},{"title":"usage","path":"operator/usage","filePath":"../content/commands/operator/usage.mdx","fullPath":"/consul/commands/operator/usage","id":"sidebar-nav-item-109"}],"id":"sidebar-nav-item-104"},{"title":"partition","path":"partition","filePath":"../content/commands/partition.mdx","fullPath":"/consul/commands/partition","id":"sidebar-nav-item-110"},{"title":"peering","routes":[{"title":"Overview","path":"peering","filePath":"../content/commands/peering/index.mdx","fullPath":"/consul/commands/peering","id":"sidebar-nav-item-112"},{"title":"delete","path":"peering/delete","filePath":"../content/commands/peering/delete.mdx","fullPath":"/consul/commands/peering/delete","id":"sidebar-nav-item-113"},{"title":"establish","path":"peering/establish","filePath":"../content/commands/peering/establish.mdx","fullPath":"/consul/commands/peering/establish","id":"sidebar-nav-item-114"},{"title":"exported-services","path":"peering/exported-services","filePath":"../content/commands/peering/exported-services.mdx","fullPath":"/consul/commands/peering/exported-services","id":"sidebar-nav-item-115"},{"title":"generate-token","path":"peering/generate-token","filePath":"../content/commands/peering/generate-token.mdx","fullPath":"/consul/commands/peering/generate-token","id":"sidebar-nav-item-116"},{"title":"list","path":"peering/list","filePath":"../content/commands/peering/list.mdx","fullPath":"/consul/commands/peering/list","id":"sidebar-nav-item-117"},{"title":"read","path":"peering/read","filePath":"../content/commands/peering/read.mdx","fullPath":"/consul/commands/peering/read","id":"sidebar-nav-item-118"}],"id":"sidebar-nav-item-111"},{"title":"reload","path":"reload","filePath":"../content/commands/reload.mdx","fullPath":"/consul/commands/reload","id":"sidebar-nav-item-119"},{"title":"resource","path":"resource","badge":{"text":"v2","type":"outlined","color":"neutral"},"filePath":"../content/commands/resource.mdx","fullPath":"/consul/commands/resource","id":"sidebar-nav-item-120"},{"title":"rtt","path":"rtt","filePath":"../content/commands/rtt.mdx","fullPath":"/consul/commands/rtt","id":"sidebar-nav-item-121"},{"title":"services","routes":[{"title":"Overview","path":"services","filePath":"../content/commands/services/index.mdx","fullPath":"/consul/commands/services","id":"sidebar-nav-item-123"},{"title":"register","path":"services/register","filePath":"../content/commands/services/register.mdx","fullPath":"/consul/commands/services/register","id":"sidebar-nav-item-124"},{"title":"deregister","path":"services/deregister","filePath":"../content/commands/services/deregister.mdx","fullPath":"/consul/commands/services/deregister","id":"sidebar-nav-item-125"},{"title":"export","path":"services/export","filePath":"../content/commands/services/export.mdx","fullPath":"/consul/commands/services/export","id":"sidebar-nav-item-126"},{"title":"exported-services","path":"services/exported-services","filePath":"../content/commands/services/exported-services.mdx","fullPath":"/consul/commands/services/exported-services","id":"sidebar-nav-item-127"}],"id":"sidebar-nav-item-122"},{"title":"snapshot","routes":[{"title":"Overview","path":"snapshot","filePath":"../content/commands/snapshot/index.mdx","fullPath":"/consul/commands/snapshot","id":"sidebar-nav-item-129"},{"title":"agent","path":"snapshot/agent","filePath":"../content/commands/snapshot/agent.mdx","fullPath":"/consul/commands/snapshot/agent","id":"sidebar-nav-item-130"},{"title":"inspect","path":"snapshot/inspect","filePath":"../content/commands/snapshot/inspect.mdx","fullPath":"/consul/commands/snapshot/inspect","id":"sidebar-nav-item-131"},{"title":"restore","path":"snapshot/restore","filePath":"../content/commands/snapshot/restore.mdx","fullPath":"/consul/commands/snapshot/restore","id":"sidebar-nav-item-132"},{"title":"save","path":"snapshot/save","filePath":"../content/commands/snapshot/save.mdx","fullPath":"/consul/commands/snapshot/save","id":"sidebar-nav-item-133"}],"id":"sidebar-nav-item-128"},{"title":"tls","routes":[{"title":"Overview","path":"tls","filePath":"../content/commands/tls/index.mdx","fullPath":"/consul/commands/tls","id":"sidebar-nav-item-135"},{"title":"ca","path":"tls/ca","filePath":"../content/commands/tls/ca.mdx","fullPath":"/consul/commands/tls/ca","id":"sidebar-nav-item-136"},{"title":"cert","path":"tls/cert","filePath":"../content/commands/tls/cert.mdx","fullPath":"/consul/commands/tls/cert","id":"sidebar-nav-item-137"}],"id":"sidebar-nav-item-134"},{"title":"troubleshoot","routes":[{"title":"Overview","path":"troubleshoot","filePath":"../content/commands/troubleshoot/index.mdx","fullPath":"/consul/commands/troubleshoot","id":"sidebar-nav-item-139"},{"title":"upstreams","path":"troubleshoot/upstreams","filePath":"../content/commands/troubleshoot/upstreams.mdx","fullPath":"/consul/commands/troubleshoot/upstreams","id":"sidebar-nav-item-140"},{"title":"proxy","path":"troubleshoot/proxy","filePath":"../content/commands/troubleshoot/proxy.mdx","fullPath":"/consul/commands/troubleshoot/proxy","id":"sidebar-nav-item-141"},{"title":"ports","path":"troubleshoot/ports","filePath":"../content/commands/troubleshoot/ports.mdx","fullPath":"/consul/commands/troubleshoot/ports","id":"sidebar-nav-item-142"}],"id":"sidebar-nav-item-138"},{"title":"validate","path":"validate","filePath":"../content/commands/validate.mdx","fullPath":"/consul/commands/validate","id":"sidebar-nav-item-143"},{"title":"version","path":"version","filePath":"../content/commands/version.mdx","fullPath":"/consul/commands/version","id":"sidebar-nav-item-144"},{"title":"watch","path":"watch","filePath":"../content/commands/watch.mdx","fullPath":"/consul/commands/watch","id":"sidebar-nav-item-145"}],"title":"CLI","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/consul/blob/main/website/../content/commands/connect/envoy.mdx"},"metadata":{"title":"Commands: Connect Envoy","description":"The connect envoy subcommand is used to generate a bootstrap configuration for Envoy.","layout":null},"outlineItems":[{"title":"Consul Connect Envoy","url":"#consul-connect-envoy","dataHeapTrack":"toc-list-item-index-0"},{"title":"Usage","url":"#usage","dataHeapTrack":"toc-list-item-index-1"},{"title":"Examples","url":"#examples","dataHeapTrack":"toc-list-item-index-2"},{"title":"Exec Security Details","url":"#exec-security-details","dataHeapTrack":"toc-list-item-index-3"},{"title":"Envoy Hot Restart","url":"#envoy-hot-restart","dataHeapTrack":"toc-list-item-index-4"}],"pageHeading":{"id":"consul-connect-envoy","title":"Consul Connect Envoy"},"mdxSource":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`Command: `,mdx(\"inlineCode\",{parentName:\"p\"},`consul connect envoy`)),mdx(\"p\",null,`The connect Envoy command is used to generate a bootstrap configuration for\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://envoyproxy.io\"},`Envoy proxy`),` for use with `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/\"},`Consul\nservice mesh`),`.`),mdx(\"p\",null,`Refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#examples\"},`examples`),` for guidance on common use cases,\nsuch as `,mdx(\"a\",{parentName:\"p\",\"href\":\"#sidecar-proxy-with-acls-enabled\"},`launching a service instance's sidecar proxy\nwhen ACLs are enabled`),`.`),mdx(\"p\",null,`The default behavior is to generate the necessary bootstrap configuration for\nEnvoy based on the environment variables and options provided and by talking to\nthe local Consul agent. It `,mdx(\"inlineCode\",{parentName:\"p\"},`exec`),`s an external Envoy binary with that\nconfiguration leaving the Envoy process running in the foreground. An error is\nreturned on operating systems other than linux or macOS since Envoy does not\nbuild for other platforms currently.`),mdx(\"p\",null,`If the `,mdx(\"inlineCode\",{parentName:\"p\"},`-bootstrap`),` option is specified, the bootstrap config is generated in\nthe same way and then printed to stdout. This allows it to be redirected to a\nfile and used with `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy --config-path bootstrap.json`),`. This works on all operating\nsystems allowing configuration to be generated on a host that Envoy doesn't\nbuild on but then used in a virtualized environment that can run Envoy.`),mdx(\"h2\",{\"id\":\"usage\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#usage\",\"aria-label\":\"usage permalink\"},`\\xbb`),`Usage`),mdx(\"p\",null,`Usage: `,mdx(\"inlineCode\",{parentName:\"p\"},`consul connect envoy [options] [-- pass-through options]`)),mdx(\"h4\",{\"id\":\"envoy-options-for-both-sidecars-and-gateways\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#envoy-options-for-both-sidecars-and-gateways\",\"aria-label\":\"envoy options for both sidecars and gateways permalink\"},`\\xbb`),`Envoy Options for both Sidecars and Gateways`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"proxy-id\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#proxy-id\",\"aria-label\":\"proxy id permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-proxy-id`)),` - The `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/proxies/proxy-config-reference\"},`proxy service`),` ID.\nThis service ID must already be registered with the local agent unless a gateway is being\nregistered with the `,mdx(\"inlineCode\",{parentName:\"p\"},`-register`),` flag. As of Consul 1.8.0, this can also be\nspecified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONNECT_PROXY_ID`),` environment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"envoy-binary\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#envoy-binary\",\"aria-label\":\"envoy binary permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-envoy-binary`)),` - The full path to a specific Envoy binary to exec. By\ndefault the current `,mdx(\"inlineCode\",{parentName:\"p\"},`$PATH`),` is searched for `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"admin-bind\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#admin-bind\",\"aria-label\":\"admin bind permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-admin-bind`)),` - The `,mdx(\"inlineCode\",{parentName:\"p\"},`host:port`),` to bind Envoy's admin HTTP API. Default is\n`,mdx(\"inlineCode\",{parentName:\"p\"},`localhost:19000`),`. Envoy requires that this be enabled. The host part must be\nresolvable DNS name or IP address.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"bootstrap\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#bootstrap\",\"aria-label\":\"bootstrap permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-bootstrap`)),` - If present, the command will simply output the generated\nbootstrap config to stdout in JSON protobuf form. This can be directed to a\nfile and used to start Envoy with `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy --config-path bootstrap.json`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Security Note:`),` If ACLs are enabled the bootstrap JSON will contain the\nACL token from `,mdx(\"inlineCode\",{parentName:\"p\"},`-token`),` or the environment and so should be handled as a secret.\nThis token grants the identity of any service it has `,mdx(\"inlineCode\",{parentName:\"p\"},`service:write`),` permission\nfor and so can be used to access any upstream service that that service is\nallowed to access by `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/intentions\"},`service mesh intentions`),`.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"envoy-version\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#envoy-version\",\"aria-label\":\"envoy version permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-envoy-version`)),` - The version of envoy that is being started. Default is\n`,mdx(\"inlineCode\",{parentName:\"p\"},`1.23.1`),`. This is required so that the correct configuration can be generated.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"grpc-ca-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#grpc-ca-file\",\"aria-label\":\"grpc ca file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-grpc-ca-file`)),` - Path to a CA file to use for TLS when communicating with the\nConsul agent through xDS. This can also be specified via the CONSUL_GRPC_CACERT\nenvironment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"grpc-ca-path\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#grpc-ca-path\",\"aria-label\":\"grpc ca path permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-grpc-ca-path`)),` - Path to a directory of CA certificates to use for TLS when\ncommunicating with the Consul agent through xDS. This can also be specified via\nthe CONSUL_GRPC_CAPATH environment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"no-central-config\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#no-central-config\",\"aria-label\":\"no central config permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-no-central-config`)),` - By default the proxy's bootstrap configuration can be\ncustomized centrally. This requires that the command run on the same agent\nas the proxy will and that the agent is reachable when the command is run.\nIn cases where either assumption is violated this flag will prevent the\ncommand attempting to resolve config from the local agent.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"envoy-ready-bind-address\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#envoy-ready-bind-address\",\"aria-label\":\"envoy ready bind address permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-envoy-ready-bind-address`)),` - By default the proxy does not have a readiness probe\nconfigured on it. This flag in conjunction with the `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy-ready-bind-port`),` flag\nconfigures where the envoy readiness probe is configured on the proxy. A `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP\nendpoint will be instantiated at the specified address and port. When configured, Consul\nuses `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP endpoints to check proxy health.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"envoy-ready-bind-port\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#envoy-ready-bind-port\",\"aria-label\":\"envoy ready bind port permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-envoy-ready-bind-port`)),` - By default the proxy does not have a readiness probe\nconfigured on it. This flag in conjunction with the `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy-ready-bind-address`),` flag\nconfigures where the envoy readiness probe is configured on the proxy. A `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP\nendpoint will be instantiated at the specified address and port. When configured, Consul\nuses `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP endpoints to check proxy health.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-backend-port\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-backend-port\",\"aria-label\":\"prometheus backend port permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-backend-port`)),` - Sets the backend port for the \"prometheus_backend\"\ncluster that `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),` will point to. Without this flag,\n`,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),` would point to the \"self_admin\" cluster where Envoy metrics\nare exposed. The metrics merging feature in consul-k8s uses this to point to the\nmerged metrics endpoint combining Envoy and service metrics.\nOnly applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),` is set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-scrape-path\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-scrape-path\",\"aria-label\":\"prometheus scrape path permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-scrape-path`)),` - Sets the path where Envoy will expose metrics on the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),` listener. Default is `,mdx(\"inlineCode\",{parentName:\"p\"},`/metrics`),`. For example, if `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),`\nis `,mdx(\"inlineCode\",{parentName:\"p\"},`0.0.0.0:20200`),`, and this flag is set to `,mdx(\"inlineCode\",{parentName:\"p\"},`/scrape-metrics`),`, prometheus metrics would\nbe scrapable at `,mdx(\"inlineCode\",{parentName:\"p\"},`0.0.0.0:20200/scrape-metrics`),`.\nOnly applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),` is set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-ca-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-ca-file\",\"aria-label\":\"prometheus ca file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-ca-file`)),` - Path to a CA file for Envoy to use when serving TLS on\nthe Prometheus metrics endpoint. Only applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),`\nis set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-ca-path\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-ca-path\",\"aria-label\":\"prometheus ca path permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-ca-path`)),` - Path to a directory of CA certificates for Envoy to use when\nserving the Prometheus metrics endpoint. Only applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),`\nis set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-cert-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-cert-file\",\"aria-label\":\"prometheus cert file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-cert-file`)),` - Path to a certificate file for Envoy to use when serving\nTLS on the Prometheus metrics endpoint. Only applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),`\nis set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"prometheus-key-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#prometheus-key-file\",\"aria-label\":\"prometheus key file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-prometheus-key-file`)),` - Path to a private key file for Envoy to use when serving\nTLS on the Prometheus metrics endpoint. Only applicable when `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy_prometheus_bind_addr`),`\nis set in proxy config.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"ignore-envoy-compatibility\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#ignore-envoy-compatibility\",\"aria-label\":\"ignore envoy compatibility permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-ignore-envoy-compatibility`)),` - If set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, this flag ignores the Envoy version\ncompatibility check. We recommend setting this flag to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),` to ensure\ncompatibility with Envoy and prevent potential issues. Default is `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"pass-through-options\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#pass-through-options\",\"aria-label\":\"pass through options permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-- [pass-through options]`)),` - Any options given after a double dash are passed\ndirectly through to the `,mdx(\"inlineCode\",{parentName:\"p\"},`envoy`),` invocation. See `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.envoyproxy.io/docs\"},`Envoy's\ndocumentation`),` for more details. The command\nalways specifies `,mdx(\"inlineCode\",{parentName:\"p\"},`--config-file`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`--v2-config-only`),` and by default passes\n`,mdx(\"inlineCode\",{parentName:\"p\"},`--disable-hot-restart`),` see `,mdx(\"a\",{parentName:\"p\",\"href\":\"#envoy-hot-restart\"},`hot restart`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"enable-config-gen-logging\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#enable-config-gen-logging\",\"aria-label\":\"enable config gen logging permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-enable-config-gen-logging`)),` - This flag enables debug message logging when generating the Envoy bootstrap configuration to help troubleshoot issues. Logs output to `,mdx(\"inlineCode\",{parentName:\"p\"},`stderr`),`. For more information about generating the Envoy bootstrap configuration, refer to `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/proxies/envoy#bootstrap-configuration\"},`Envoy proxy configuration`),`.`))),mdx(\"h4\",{\"id\":\"envoy-sidecar-proxy-options\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#envoy-sidecar-proxy-options\",\"aria-label\":\"envoy sidecar proxy options permalink\"},`\\xbb`),`Envoy Sidecar Proxy Options`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"sidecar-for\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#sidecar-for\",\"aria-label\":\"sidecar for permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-sidecar-for`)),` - The `,mdx(\"em\",{parentName:\"p\"},`ID`),` (not name if they differ) of the service instance\nthis proxy will represent. The target service doesn't need to exist on the\nlocal agent yet but a `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/proxies/deploy-sidecar-services\"},`sidecar proxy\nregistration`),` with\n`,mdx(\"inlineCode\",{parentName:\"p\"},`proxy.destination_service_id`),` equal to the passed value must be present. If\nmultiple proxy registrations targeting the same local service instance are\npresent the command will error and `,mdx(\"inlineCode\",{parentName:\"p\"},`-proxy-id`),` should be used instead.\nAs of Consul 1.8.0, this can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONNECT_SIDECAR_FOR`),`\nenvironment variable.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If ACLs are enabled, a token granting `,mdx(\"inlineCode\",{parentName:\"p\"},`service:write`),` for the\n`,mdx(\"em\",{parentName:\"p\"},`target`),` service (configured in `,mdx(\"inlineCode\",{parentName:\"p\"},`proxy.destination_service_name`),`) must be\npassed using the `,mdx(\"inlineCode\",{parentName:\"p\"},`-token`),` option or `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_TOKEN`),` environment variable.\nThis token authorizes the proxy to obtain TLS certificates representing the\ntarget service.`)))),mdx(\"h4\",{\"id\":\"envoy-gateway-options\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#envoy-gateway-options\",\"aria-label\":\"envoy gateway options permalink\"},`\\xbb`),`Envoy Gateway Options`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"gateway\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#gateway\",\"aria-label\":\"gateway permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-gateway`)),` - Flag to indicate that Envoy should be configured as a Gateway.\nMust be one of: `,mdx(\"inlineCode\",{parentName:\"p\"},`terminating`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`ingress`),`, or `,mdx(\"inlineCode\",{parentName:\"p\"},`mesh`),`.\nIf multiple gateways are managed by the same local agent then\n`,mdx(\"inlineCode\",{parentName:\"p\"},`-proxy-id`),` should be used as well to specify the instance this represents.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"register\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#register\",\"aria-label\":\"register permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-register`)),` - Indicates that the gateway service should be registered\nwith the local agent instead of expecting it to already exist. This flag\nis unused for traditional sidecar proxies.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"address\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#address\",\"aria-label\":\"address permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-address`)),` - The address to advertise for services within the local datacenter\nto use to reach the gateway instance. This flag is used in combination with\n`,mdx(\"inlineCode\",{parentName:\"p\"},`-register`),`. This takes the form of `,mdx(\"inlineCode\",{parentName:\"p\"},`<ip address>:<port>`),` but also supports go-sockaddr\ntemplates.`),mdx(\"p\",{parentName:\"li\"},`If Envoy is configured as a terminating or mesh gateway, traffic from services\nwithin the mesh will be received at the specified IP and port.`),mdx(\"p\",{parentName:\"li\"},`If Envoy is configured as an ingress gateway, Consul instantiates a `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP endpoint at the specified IP and port. Consul uses `,mdx(\"inlineCode\",{parentName:\"p\"},`/ready`),` HTTP endpoints\nto check gateway health. Ingress gateways also use the specified IP when instantiating user-defined listeners configured in the\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/config-entries/ingress-gateway\"},`ingress gateway configuration entry`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note`),`: Ensure that user-defined ingress gateway listeners use a\ndifferent port than the port specified in `,mdx(\"inlineCode\",{parentName:\"p\"},`-address`),` so that they do not\nconflict with the health check endpoint.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"admin-access-log-path\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#admin-access-log-path\",\"aria-label\":\"admin access log path permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-admin-access-log-path`)),` -\n`,mdx(\"strong\",{parentName:\"p\"},`Deprecated in Consul 1.15.0 in favor of `,mdx(\"a\",{parentName:\"strong\",\"href\":\"/consul/docs/connect/config-entries/proxy-defaults#accesslogs\"},mdx(\"inlineCode\",{parentName:\"a\"},`proxy-defaults`),` access logs`),`.`),`\nThe path to write the access log for the administration\nserver. If no access log is desired specify `,mdx(\"inlineCode\",{parentName:\"p\"},`/dev/null`),`. By default it will\nuse `,mdx(\"inlineCode\",{parentName:\"p\"},`/dev/null`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"bind-address\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#bind-address\",\"aria-label\":\"bind address permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-bind-address`)),` - The bind address to use instead of the default binding rules.\nSpecified as `,mdx(\"inlineCode\",{parentName:\"p\"},`<name>=<ip>:<port>`),` pairs. This flag may be used multiple times\nto add multiple bind addresses.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"expose-servers\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#expose-servers\",\"aria-label\":\"expose servers permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-expose-servers`)),` - Expose the servers for WAN federation via this mesh\ngateway.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"wan-address\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#wan-address\",\"aria-label\":\"wan address permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-wan-address`)),` - The address to advertise for services within remote datacenters\nto use to reach the gateway instance. This flag is used in combination with\n`,mdx(\"inlineCode\",{parentName:\"p\"},`-register`),`. This takes the form of `,mdx(\"inlineCode\",{parentName:\"p\"},`<ip address>:<port>`),` but also supports go-sockaddr\ntemplates.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"service\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#service\",\"aria-label\":\"service permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-service`)),` - The name of the gateway service to register. This flag is used\nin combination with `,mdx(\"inlineCode\",{parentName:\"p\"},`-register`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"deregister-after-critical\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#deregister-after-critical\",\"aria-label\":\"deregister after critical permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-deregister-after-critical`)),` - The amount of time the gateway services health check can\nbe failing before being deregistered. This flag is used in combination with `,mdx(\"inlineCode\",{parentName:\"p\"},`-register`)))),mdx(\"h4\",{\"id\":\"enterprise-options\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#enterprise-options\",\"aria-label\":\"enterprise options permalink\"},`\\xbb`),`Enterprise Options`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"partition\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#partition\",\"aria-label\":\"partition permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-partition=<string>`)),` - Specifies the partition to query. If not provided, the partition will be inferred from the request's ACL token, or will default to the `,mdx(\"inlineCode\",{parentName:\"li\"},`default`),` partition. Partitions are a Consul Enterprise feature added in v1.11.0.`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"namespace\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#namespace\",\"aria-label\":\"namespace permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-namespace=<string>`)),` - Specifies the namespace to query. If not provided, the namespace will be inferred from the request's ACL token, or will default to the `,mdx(\"inlineCode\",{parentName:\"li\"},`default`),` namespace. Namespaces are a Consul Enterprise feature added in v1.7.0.`)),mdx(\"h4\",{\"id\":\"api-options\"},mdx(\"a\",{parentName:\"h4\",\"className\":\"__permalink-h\",\"href\":\"#api-options\",\"aria-label\":\"api options permalink\"},`\\xbb`),`API Options`),mdx(\"p\",null,`The standard API options are used to connect to the local agent to discover the\nproxy configuration needed.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"grpc-addr\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#grpc-addr\",\"aria-label\":\"grpc addr permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-grpc-addr=<addr>`)),` - Address of the Consul agent with `,mdx(\"inlineCode\",{parentName:\"p\"},`grpc`),` port. This can\nbe an IP address or DNS address, but it must include the port. This can also\nbe specified via the CONSUL_GRPC_ADDR environment variable. In Consul 1.3 and\nlater, the default value is 127.0.0.1:8502, and https can optionally\nbe used instead. The scheme can also be set to HTTPS by setting the\nenvironment variable CONSUL_HTTP_SSL=true. This may be a unix domain socket\nusing `,mdx(\"inlineCode\",{parentName:\"p\"},`unix:///path/to/socket`),` if the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#addresses\"},`agent is configured to\nlisten`),` that way.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` gRPC uses the same TLS\nsettings as the HTTPS API. If HTTPS is enabled then gRPC will require HTTPS\nas well.`)),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"ca-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#ca-file\",\"aria-label\":\"ca file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-ca-file=<value>`)),` - Path to a CA file to use for TLS when communicating with Consul.\nThis can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_CACERT`),` environment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"ca-path\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#ca-path\",\"aria-label\":\"ca path permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-ca-path=<value>`)),` - Path to a directory of CA certificates to use for TLS when\ncommunicating with Consul. This can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_CAPATH`),`\nenvironment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"client-cert\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#client-cert\",\"aria-label\":\"client cert permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-client-cert=<value>`)),` - Path to a client cert file to use for TLS when\n`,mdx(\"inlineCode\",{parentName:\"p\"},`verify_incoming`),` is enabled. This can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_CLIENT_CERT`),`\nenvironment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"client-key\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#client-key\",\"aria-label\":\"client key permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-client-key=<value>`)),` - Path to a client key file to use for TLS when\n`,mdx(\"inlineCode\",{parentName:\"p\"},`verify_incoming`),` is enabled. This can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_CLIENT_KEY`),`\nenvironment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"http-addr\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#http-addr\",\"aria-label\":\"http addr permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-http-addr=<addr>`)),` - Address of the Consul agent with the port. This can be\nan IP address or DNS address, but it must include the port. This can also be\nspecified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_ADDR`),` environment variable. In Consul 0.8 and\nlater, the default value is `,mdx(\"a\",{parentName:\"p\",\"href\":\"http://127.0.0.1:8500\"},`http://127.0.0.1:8500`),`, and https can optionally be\nused instead. The scheme can also be set to HTTPS by setting the environment\nvariable `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_SSL=true`),`. This may be a unix domain socket using\n`,mdx(\"inlineCode\",{parentName:\"p\"},`unix:///path/to/socket`),` if the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/agent/config/config-files#addresses\"},`agent is configured to\nlisten`),` that way.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"tls-server-name\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#tls-server-name\",\"aria-label\":\"tls server name permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-tls-server-name=<value>`)),` - The server name to use as the SNI host when\nconnecting via TLS. This can also be specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_TLS_SERVER_NAME`),`\nenvironment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"token\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#token\",\"aria-label\":\"token permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-token=<value>`)),` - ACL token to use in the request. This can also be specified\nvia the `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_TOKEN`),` environment variable. If unspecified, the query\nwill default to the token of the Consul agent at the HTTP address.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"token-file\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#token-file\",\"aria-label\":\"token file permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`-token-file=<value>`)),` - File containing the ACL token to use in the request\ninstead of one specified via the `,mdx(\"inlineCode\",{parentName:\"p\"},`-token`),` argument or `,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_TOKEN`),`\nenvironment variable. This can also be specified via the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`CONSUL_HTTP_TOKEN_FILE`),` environment variable.`))))),mdx(\"h2\",{\"id\":\"examples\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#examples\",\"aria-label\":\"examples permalink\"},`\\xbb`),`Examples`),mdx(\"p\",null,`In the following examples, a local service instance is registered on the local agent with a\nsidecar proxy (using the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/connect/proxies/deploy-sidecar-services\"},`sidecar service\nregistration`),` helper):`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`service`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`name`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"web\"`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`port`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`8080`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`connect`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`sidecar_service`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h3\",{\"id\":\"basic-sidecar-proxy\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#basic-sidecar-proxy\",\"aria-label\":\"basic sidecar proxy permalink\"},`\\xbb`),`Basic sidecar proxy`),mdx(\"p\",null,`The sidecar Envoy process can be started with.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -sidecar-for web`)),`\n`)),mdx(\"p\",null,`This example assumes that the correct `,mdx(\"a\",{parentName:\"p\",\"href\":\"#api-options\"},`environment variables`),` are\nused to set the local agent connection information and ACL token, or that the\nagent is using all-default configuration.`),mdx(\"h3\",{\"id\":\"sidecar-proxy-with-acls-enabled\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#sidecar-proxy-with-acls-enabled\",\"aria-label\":\"sidecar proxy with acls enabled permalink\"},`\\xbb`),`Sidecar proxy with ACLs enabled`),mdx(\"p\",null,`In secure deployments, Consul's ACL system is enabled with a default `,mdx(\"inlineCode\",{parentName:\"p\"},`deny`),` policy.\nTo access Consul API resources, an API request must present a Consul ACL token\nwith the necessary privileges. If ACLs are enabled, you must provide an ACL token to the sidecar proxy. The token must grant the proxy privileges to register itself and the service it fronts and to access all potential upstreams of that service.\nWe recommend `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/commands/acl/token/create#create-a-token-for-a-service\"},`using a service identity`),`\nto directly create a token with the privileges necessary for a service and its sidecar proxy,\nrather than creating a unique ACL policy for every service.`),mdx(\"p\",null,`After creating a token using a service identity, provide the token when\nlaunching the Envoy sidecar proxy instance with the `,mdx(\"inlineCode\",{parentName:\"p\"},`consul connect envoy`),` command.\nYou can provide the token through an environment variable or CLI flag.`),mdx(\"p\",null,`Environment variables:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/commands#consul_http_token\"},mdx(\"inlineCode\",{parentName:\"a\"},`CONSUL_HTTP_TOKEN`)),` or`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/commands#consul_http_token_file\"},mdx(\"inlineCode\",{parentName:\"a\"},`CONSUL_HTTP_TOKEN_FILE`)))),mdx(\"p\",null,`CLI flags:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/commands/connect/envoy#token\"},mdx(\"inlineCode\",{parentName:\"a\"},`-token`)),` or`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/commands/connect/envoy#token-file\"},mdx(\"inlineCode\",{parentName:\"a\"},`-token-file`)))),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token builtin class-name\"},`export`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token assign-left variable\"},`CONSUL_HTTP_TOKEN`),mdx(\"span\",{parentName:\"span\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"span\",\"className\":\"token string\"},`\"<secret-id-of-token-with-service-identity-for-web>\"`))),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -sidecar-for web`)),`\n`)),mdx(\"h3\",{\"id\":\"additional-envoy-arguments\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#additional-envoy-arguments\",\"aria-label\":\"additional envoy arguments permalink\"},`\\xbb`),`Additional Envoy Arguments`),mdx(\"p\",null,`To pass additional arguments directly to Envoy, for example output logging\nlevel, you can use:`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -sidecar-for web -- --log-level debug`)),`\n`)),mdx(\"h3\",{\"id\":\"multiple-proxy-instances\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#multiple-proxy-instances\",\"aria-label\":\"multiple proxy instances permalink\"},`\\xbb`),`Multiple Proxy Instances`),mdx(\"p\",null,`To run multiple different proxy instances on the same host, you will\nneed to use `,mdx(\"inlineCode\",{parentName:\"p\"},`-admin-bind`),` on all but one to ensure they don't attempt to bind to\nthe same port as in the following example.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -sidecar-for db -admin-bind localhost:19001`)),`\n`)),mdx(\"h3\",{\"id\":\"mesh-gateways\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#mesh-gateways\",\"aria-label\":\"mesh gateways permalink\"},`\\xbb`),`Mesh Gateways`),mdx(\"p\",null,`The mesh gateway Envoy process can be auto-registered and started with the following command.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -gateway`,mdx(\"span\",{parentName:\"span\",\"className\":\"token operator\"},`=`),`mesh -register `,mdx(\"span\",{parentName:\"span\",\"className\":\"token punctuation\"},`\\\\`))),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`  -address `,mdx(\"span\",{parentName:\"span\",\"className\":\"token string\"},`'{{ GetInterfaceIP \"eth0\" }}:8443'`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token punctuation\"},`\\\\`))),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`  -wan-address `,mdx(\"span\",{parentName:\"span\",\"className\":\"token string\"},`'{{ GetInterfaceIP \"eth1\" }}:8443'`))),`\n`)),mdx(\"h3\",{\"id\":\"terminating-gateways\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#terminating-gateways\",\"aria-label\":\"terminating gateways permalink\"},`\\xbb`),`Terminating Gateways`),mdx(\"p\",null,`The terminating gateway Envoy process can be auto-registered and started with the following command.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -gateway`,mdx(\"span\",{parentName:\"span\",\"className\":\"token operator\"},`=`),`terminating -register -service my-gateway `,mdx(\"span\",{parentName:\"span\",\"className\":\"token punctuation\"},`\\\\`))),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`  -address `,mdx(\"span\",{parentName:\"span\",\"className\":\"token string\"},`'{{ GetInterfaceIP \"eth0\" }}:8443'`))),`\n`)),mdx(\"h3\",{\"id\":\"ingress-gateways\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#ingress-gateways\",\"aria-label\":\"ingress gateways permalink\"},`\\xbb`),`Ingress Gateways`),mdx(\"p\",null,`The ingress gateway Envoy process can be auto-registered and started with the following command.`),mdx(\"pre\",{\"className\":\"language-shell-session\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-shell-session\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token shell-symbol important\"},`$`),` `,mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`consul connect envoy -gateway`,mdx(\"span\",{parentName:\"span\",\"className\":\"token operator\"},`=`),`ingress -register -service ingress-service `,mdx(\"span\",{parentName:\"span\",\"className\":\"token punctuation\"},`\\\\`))),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token command\"},mdx(\"span\",{parentName:\"span\",\"className\":\"token bash language-bash\"},`  -address `,mdx(\"span\",{parentName:\"span\",\"className\":\"token string\"},`'{{ GetInterfaceIP \"eth0\" }}:8888'`))),`\n`)),mdx(\"h2\",{\"id\":\"exec-security-details\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#exec-security-details\",\"aria-label\":\"exec security details permalink\"},`\\xbb`),`Exec Security Details`),mdx(\"p\",null,`The command needs to pass the bootstrap config through to Envoy. Envoy currently\nonly supports passing this as a file path or passing a whole string on the\ncommand line with `,mdx(\"inlineCode\",{parentName:\"p\"},`--config-yaml`),`. Since the bootstrap needs to contain the ACL\ntoken to authorize the proxy, this secret needs careful handling.`),mdx(\"p\",null,`Passing a secret via command option is unacceptable as on many unix systems\nthese are readable to any user on the host for example via `,mdx(\"inlineCode\",{parentName:\"p\"},`/proc`),` or via a\nsetuid process like `,mdx(\"inlineCode\",{parentName:\"p\"},`ps`),`.`),mdx(\"p\",null,`Creating a temporary file is more secure in that it can only be read by the\ncurrent user but risks leaving secret material on disk for an unbounded length\nof time and in a location that is opaque to the operator.`),mdx(\"p\",null,`To work around these issues, the command currently creates a temporary file and\nimmediately unlinks it so it can't be read by any other process that doesn't\nalready have the file descriptor. It then writes the bootstrap JSON, and unsets\nthe CLOEXEC bit on the file handle so that it remains available to the Envoy\nprocess after exec. Finally it `,mdx(\"inlineCode\",{parentName:\"p\"},`exec`),`s Envoy with `,mdx(\"inlineCode\",{parentName:\"p\"},`--config-file /dev/fd/X`),`\nwhere `,mdx(\"inlineCode\",{parentName:\"p\"},`X`),` is the file descriptor number of the temp file.`),mdx(\"p\",null,`This ensures that Envoy can read the file without any other normal user process\nbeing able to (assuming they don't have privileged access to /proc). Once the\nEnvoy process stops, there is no longer any reference to the file to clean up.`),mdx(\"h2\",{\"id\":\"envoy-hot-restart\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#envoy-hot-restart\",\"aria-label\":\"envoy hot restart permalink\"},`\\xbb`),`Envoy Hot Restart`),mdx(\"p\",null,`Envoy supports hot restart which requires simple external coordination. By\ndefault, this command will add `,mdx(\"inlineCode\",{parentName:\"p\"},`--disable-hot-restart`),` when it runs Envoy.`),mdx(\"p\",null,`The reason for this default behavior is to make it easy to test and run local\ndemonstrations with multiple Envoy instances outside of cgroups or network\nnamespaces.`),mdx(\"p\",null,`To use hot restart, Envoy needs to be started with either the `,mdx(\"inlineCode\",{parentName:\"p\"},`--restart-epoch`),`\noption. If this command detects that option in the pass-through flags it will\n`,mdx(\"em\",{parentName:\"p\"},`not`),` add `,mdx(\"inlineCode\",{parentName:\"p\"},`--disable-hot-restart`),` allowing hot restart to work normally.`),mdx(\"p\",null,`The only difference to note over running Envoy directly is that\n`,mdx(\"inlineCode\",{parentName:\"p\"},`--restart-epoch`),` must be explicitly set to `,mdx(\"inlineCode\",{parentName:\"p\"},`0`),` for the initial launch of the\nEnvoy instance to avoid disabling hot restart entirely. The official\n`,mdx(\"inlineCode\",{parentName:\"p\"},`hot-restarter.py`),` always sets this option so should work as recommended.`))};MDXContent.isMDXComponent=true;","scope":{"version":"latest"}},"product":{"name":"Consul","slug":"consul","algoliaConfig":{"indexName":"product_CONSUL","searchOnlyApiKey":"fbd5dc1f0078d41509fcc560386fd534"},"analyticsConfig":{"includedDomains":"consul.io www.consul.io","segmentWriteKey":"IyzLrqXkox5KJ8XL4fo8vTYNGfiKlTCm"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Consul by HashiCorp","description":"Consul is a service networking solution to automate network configurations, discover services, and enable secure connectivity across any cloud or runtime.","image":"https://www.consulproject.io/consul-public/img/og-image.png","icon":[{"href":"/consul-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.11.3","subnavItems":[],"basePaths":["docs","api-docs","commands","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"CLI","path":"commands"}],"currentRootDocsPath":{"iconName":"terminal-screen","name":"CLI","path":"commands"}},"projectName":null,"versions":null},"__N_SSG":true}