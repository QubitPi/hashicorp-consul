{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Consul","url":"/consul"},{"title":"API","url":"/consul/api-docs","isCurrentPage":false},{"title":"API Features"},{"title":"Agent Caching","url":"/consul/api-docs/features/caching","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Consul Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Consul","fullPath":"/consul","theme":"consul"},{"title":"Install","fullPath":"/consul/install"},{"title":"Tutorials","fullPath":"/consul/tutorials"},{"title":"Documentation","fullPath":"/consul/docs"},{"title":"API","fullPath":"/consul/api-docs"},{"title":"CLI","fullPath":"/consul/commands"}],"showFilterInput":false,"title":"Consul","visuallyHideTitle":true},{"backToLinkProps":{"text":"Consul Home","href":"/consul"},"levelButtonProps":{"levelUpButtonText":"Consul Home"},"menuItems":[{"title":"API","fullPath":"/consul/api-docs","theme":"consul"},{"title":"API Structure","path":"api-structure","filePath":"../content/api-docs/api-structure.mdx","fullPath":"/consul/api-docs/api-structure","id":"sidebar-nav-item-0"},{"title":"API Features","routes":[{"title":"Consistency Modes","path":"features/consistency","filePath":"../content/api-docs/features/consistency.mdx","fullPath":"/consul/api-docs/features/consistency","id":"sidebar-nav-item-2"},{"title":"Blocking Queries","path":"features/blocking","filePath":"../content/api-docs/features/blocking.mdx","fullPath":"/consul/api-docs/features/blocking","id":"sidebar-nav-item-3"},{"title":"Filtering","path":"features/filtering","filePath":"../content/api-docs/features/filtering.mdx","fullPath":"/consul/api-docs/features/filtering","id":"sidebar-nav-item-4"},{"title":"Agent Caching","path":"features/caching","filePath":"../content/api-docs/features/caching.mdx","fullPath":"/consul/api-docs/features/caching","id":"sidebar-nav-item-5"}],"id":"sidebar-nav-item-1"},{"divider":true,"id":"sidebar-nav-item-6"},{"title":"ACLs","routes":[{"title":"Overview","path":"acl","filePath":"../content/api-docs/acl/index.mdx","fullPath":"/consul/api-docs/acl","id":"sidebar-nav-item-8"},{"title":"Tokens","path":"acl/tokens","filePath":"../content/api-docs/acl/tokens.mdx","fullPath":"/consul/api-docs/acl/tokens","id":"sidebar-nav-item-9"},{"title":"Policies","path":"acl/policies","filePath":"../content/api-docs/acl/policies.mdx","fullPath":"/consul/api-docs/acl/policies","id":"sidebar-nav-item-10"},{"title":"Templated Policies","path":"acl/templated-policies","filePath":"../content/api-docs/acl/templated-policies.mdx","fullPath":"/consul/api-docs/acl/templated-policies","id":"sidebar-nav-item-11"},{"title":"Roles","path":"acl/roles","filePath":"../content/api-docs/acl/roles.mdx","fullPath":"/consul/api-docs/acl/roles","id":"sidebar-nav-item-12"},{"title":"Auth Methods","path":"acl/auth-methods","filePath":"../content/api-docs/acl/auth-methods.mdx","fullPath":"/consul/api-docs/acl/auth-methods","id":"sidebar-nav-item-13"},{"title":"Binding Rules","path":"acl/binding-rules","filePath":"../content/api-docs/acl/binding-rules.mdx","fullPath":"/consul/api-docs/acl/binding-rules","id":"sidebar-nav-item-14"}],"id":"sidebar-nav-item-7"},{"title":"Admin Partitions","path":"admin-partitions","filePath":"../content/api-docs/admin-partitions.mdx","fullPath":"/consul/api-docs/admin-partitions","id":"sidebar-nav-item-15"},{"title":"Agent","routes":[{"title":"Overview","path":"agent","filePath":"../content/api-docs/agent/index.mdx","fullPath":"/consul/api-docs/agent","id":"sidebar-nav-item-17"},{"title":"Checks","path":"agent/check","filePath":"../content/api-docs/agent/check.mdx","fullPath":"/consul/api-docs/agent/check","id":"sidebar-nav-item-18"},{"title":"Services","path":"agent/service","filePath":"../content/api-docs/agent/service.mdx","fullPath":"/consul/api-docs/agent/service","id":"sidebar-nav-item-19"},{"title":"Connect","path":"agent/connect","filePath":"../content/api-docs/agent/connect.mdx","fullPath":"/consul/api-docs/agent/connect","id":"sidebar-nav-item-20"}],"id":"sidebar-nav-item-16"},{"title":"Catalog","path":"catalog","filePath":"../content/api-docs/catalog.mdx","fullPath":"/consul/api-docs/catalog","id":"sidebar-nav-item-21"},{"title":"Cluster Peering","path":"peering","filePath":"../content/api-docs/peering.mdx","fullPath":"/consul/api-docs/peering","id":"sidebar-nav-item-22"},{"title":"Config","path":"config","filePath":"../content/api-docs/config.mdx","fullPath":"/consul/api-docs/config","id":"sidebar-nav-item-23"},{"title":"Connect","routes":[{"title":"Overview","path":"connect","filePath":"../content/api-docs/connect/index.mdx","fullPath":"/consul/api-docs/connect","id":"sidebar-nav-item-25"},{"title":"Certificate Authority (CA)","path":"connect/ca","filePath":"../content/api-docs/connect/ca.mdx","fullPath":"/consul/api-docs/connect/ca","id":"sidebar-nav-item-26"},{"title":"Intentions","path":"connect/intentions","filePath":"../content/api-docs/connect/intentions.mdx","fullPath":"/consul/api-docs/connect/intentions","id":"sidebar-nav-item-27"}],"id":"sidebar-nav-item-24"},{"title":"Coordinates","path":"coordinate","filePath":"../content/api-docs/coordinate.mdx","fullPath":"/consul/api-docs/coordinate","id":"sidebar-nav-item-28"},{"title":"Discovery Chain","path":"discovery-chain","filePath":"../content/api-docs/discovery-chain.mdx","fullPath":"/consul/api-docs/discovery-chain","id":"sidebar-nav-item-29"},{"title":"Events","path":"event","filePath":"../content/api-docs/event.mdx","fullPath":"/consul/api-docs/event","id":"sidebar-nav-item-30"},{"title":"Exported Services","path":"exported-services","filePath":"../content/api-docs/exported-services.mdx","fullPath":"/consul/api-docs/exported-services","id":"sidebar-nav-item-31"},{"title":"HCP Consul Central Link","path":"hcp-link","filePath":"../content/api-docs/hcp-link.mdx","fullPath":"/consul/api-docs/hcp-link","id":"sidebar-nav-item-32"},{"title":"Health","path":"health","filePath":"../content/api-docs/health.mdx","fullPath":"/consul/api-docs/health","id":"sidebar-nav-item-33"},{"title":"KV Store","path":"kv","filePath":"../content/api-docs/kv.mdx","fullPath":"/consul/api-docs/kv","id":"sidebar-nav-item-34"},{"title":"Operator","routes":[{"title":"Overview","path":"operator","filePath":"../content/api-docs/operator/index.mdx","fullPath":"/consul/api-docs/operator","id":"sidebar-nav-item-36"},{"title":"Area","path":"operator/area","filePath":"../content/api-docs/operator/area.mdx","fullPath":"/consul/api-docs/operator/area","id":"sidebar-nav-item-37"},{"title":"Autopilot","path":"operator/autopilot","filePath":"../content/api-docs/operator/autopilot.mdx","fullPath":"/consul/api-docs/operator/autopilot","id":"sidebar-nav-item-38"},{"title":"Keyring","path":"operator/keyring","filePath":"../content/api-docs/operator/keyring.mdx","fullPath":"/consul/api-docs/operator/keyring","id":"sidebar-nav-item-39"},{"title":"License","path":"operator/license","filePath":"../content/api-docs/operator/license.mdx","fullPath":"/consul/api-docs/operator/license","id":"sidebar-nav-item-40"},{"title":"Raft","path":"operator/raft","filePath":"../content/api-docs/operator/raft.mdx","fullPath":"/consul/api-docs/operator/raft","id":"sidebar-nav-item-41"},{"title":"Segment","path":"operator/segment","filePath":"../content/api-docs/operator/segment.mdx","fullPath":"/consul/api-docs/operator/segment","id":"sidebar-nav-item-42"},{"title":"Usage","path":"operator/usage","filePath":"../content/api-docs/operator/usage.mdx","fullPath":"/consul/api-docs/operator/usage","id":"sidebar-nav-item-43"}],"id":"sidebar-nav-item-35"},{"title":"Namespaces","path":"namespaces","filePath":"../content/api-docs/namespaces.mdx","fullPath":"/consul/api-docs/namespaces","id":"sidebar-nav-item-44"},{"title":"Prepared Queries","path":"query","filePath":"../content/api-docs/query.mdx","fullPath":"/consul/api-docs/query","id":"sidebar-nav-item-45"},{"title":"Sessions","path":"session","filePath":"../content/api-docs/session.mdx","fullPath":"/consul/api-docs/session","id":"sidebar-nav-item-46"},{"title":"Snapshots","path":"snapshot","filePath":"../content/api-docs/snapshot.mdx","fullPath":"/consul/api-docs/snapshot","id":"sidebar-nav-item-47"},{"title":"Status","path":"status","filePath":"../content/api-docs/status.mdx","fullPath":"/consul/api-docs/status","id":"sidebar-nav-item-48"},{"title":"Transactions","path":"txn","filePath":"../content/api-docs/txn.mdx","fullPath":"/consul/api-docs/txn","id":"sidebar-nav-item-49"},{"divider":true,"id":"sidebar-nav-item-50"},{"title":"Libraries &amp; SDKs","path":"libraries-and-sdks","filePath":"../content/api-docs/libraries-and-sdks.mdx","fullPath":"/consul/api-docs/libraries-and-sdks","id":"sidebar-nav-item-51"}],"title":"API","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/consul/blob/main/website/../content/api-docs/features/caching.mdx"},"metadata":{"title":"Agent Caching","description":"Some read endpoints support agent caching. They are clearly marked in the\ndocumentation.","layout":null},"outlineItems":[{"title":"Agent Caching","url":"#agent-caching","dataHeapTrack":"toc-list-item-index-0"},{"title":"Simple Caching","url":"#simple-caching","dataHeapTrack":"toc-list-item-index-1"},{"title":"Background Refresh Caching","url":"#background-refresh-caching","dataHeapTrack":"toc-list-item-index-2"}],"pageHeading":{"id":"agent-caching","title":"Agent Caching"},"mdxSource":{"compiledSource":"var d=Object.defineProperty,p=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(e,n,a)=>n in e?d(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,i=(e,n)=>{for(var a in n||(n={}))s.call(n,a)&&l(e,a,n[a]);if(r)for(var a of r(n))o.call(n,a)&&l(e,a,n[a]);return e},h=(e,n)=>p(e,m(n));var c=(e,n)=>{var a={};for(var t in e)s.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(e!=null&&r)for(var t of r(e))n.indexOf(t)<0&&o.call(e,t)&&(a[t]=e[t]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var t=a,{components:e}=t,n=c(t,[\"components\"]);return mdx(MDXLayout,h(i(i({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`Some read endpoints support agent caching. They are clearly marked in the\ndocumentation. Agent caching can take two forms, `,mdx(\"a\",i({parentName:\"p\"},{href:\"#simple-caching\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"simple\")),` or\n`,mdx(\"a\",i({parentName:\"p\"},{href:\"#background-refresh-caching\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"background refresh\")),` depending on the endpoint's\nsemantics. The documentation for each endpoint clearly identify which if any\nform of caching is supported. The details for each are described below.`),mdx(\"p\",null,\"Where supported, caching can be enabled though the \",mdx(\"inlineCode\",{parentName:\"p\"},\"?cached\"),` parameter.\nCombining `,mdx(\"inlineCode\",{parentName:\"p\"},\"?cached\"),\" with \",mdx(\"inlineCode\",{parentName:\"p\"},\"?consistent\"),\" is an error.\"),mdx(\"h2\",i({},{id:\"simple-caching\"}),mdx(\"a\",i({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#simple-caching\",\"aria-label\":\"simple caching permalink\"}),\"\\xBB\"),\"Simple Caching\"),mdx(\"p\",null,`Endpoints supporting simple caching may return a result directly from the local\nagent's cache without a round trip to the servers. By default the agent caches\nresults for a relatively long time (3 days) such that it can still return a\nresult even if the servers are unavailable for an extended period to enable\n\"fail static\" semantics.`),mdx(\"p\",null,\"That means that with no other arguments, \",mdx(\"inlineCode\",{parentName:\"p\"},\"?cached\"),` queries might receive a\nresponse which is days old. To request better freshness, the HTTP\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control\"),\" header may be set with a directive like \",mdx(\"inlineCode\",{parentName:\"p\"},\"max-age=<seconds>\"),`. In\nthis case the agent will attempt to re-fetch the result from the servers if the\ncached value is older than the given `,mdx(\"inlineCode\",{parentName:\"p\"},\"max-age\"),`. If the servers can't be reached\na 500 is returned as normal.`),mdx(\"p\",null,`To allow clients to maintain fresh results in normal operation but allow stale\nones if the servers are unavailable, the `,mdx(\"inlineCode\",{parentName:\"p\"},\"stale-if-error=<seconds>\"),` directive\nmay be additionally provided in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control\"),` header. This will return the\ncached value anyway even if it's older than `,mdx(\"inlineCode\",{parentName:\"p\"},\"max-age\"),` (provided it's not older\nthan `,mdx(\"inlineCode\",{parentName:\"p\"},\"stale-if-error\"),`) rather than a 500. It must be provided along with a\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"max-age\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"must-revalidate\"),\". The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Age\"),` response header, if larger than\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"max-age\"),` can be used to determine if the server was unreachable and a cached\nversion returned instead.`),mdx(\"p\",null,`For example, assuming there is a cached response that is 65 seconds old, and\nthat the servers are currently unavailable, `,mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control: max-age=30\"),` will\nresult in a 500 error, while `,mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control: max-age=30 stale-if-error=259200\"),`\nwill result in the cached response being returned.`),mdx(\"p\",null,\"A request setting either \",mdx(\"inlineCode\",{parentName:\"p\"},\"max-age=0\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"must-revalidate\"),` directives will cause\nthe agent to always re-fetch the response from servers. Either can be combined\nwith `,mdx(\"inlineCode\",{parentName:\"p\"},\"stale-if-error=<seconds>\"),` to ensure fresh results when the servers are\navailable, but falling back to cached results if the request to the servers\nfails.`),mdx(\"p\",null,\"Requests that do not use \",mdx(\"inlineCode\",{parentName:\"p\"},\"?cached\"),` currently bypass the cache entirely so the\ncached response returned might be more stale than the last uncached response\nreturned on the same agent. If this causes problems, it is possible to make\nrequests using `,mdx(\"inlineCode\",{parentName:\"p\"},\"?cached\"),\" and setting \",mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control: must-revalidate\"),` to have\nalways-fresh results yet keeping the cache populated with the most recent\nresult.`),mdx(\"p\",null,\"In all cases the HTTP \",mdx(\"inlineCode\",{parentName:\"p\"},\"X-Cache\"),` header is always set in the response to either\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"HIT\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"MISS\"),\" indicating whether the response was served from cache or not.\"),mdx(\"p\",null,\"For cache hits, the HTTP \",mdx(\"inlineCode\",{parentName:\"p\"},\"Age\"),` header is always set in the response to indicate\nhow many seconds since that response was fetched from the servers.`),mdx(\"h2\",i({},{id:\"background-refresh-caching\"}),mdx(\"a\",i({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#background-refresh-caching\",\"aria-label\":\"background refresh caching permalink\"}),\"\\xBB\"),\"Background Refresh Caching\"),mdx(\"p\",null,`Endpoints supporting background refresh caching may return a result directly\nfrom the local agent's cache without a round trip to the severs. The first fetch\nthat is a miss will cause an initial fetch from the servers, but will also\ntrigger the agent to begin a background blocking query that watches for any\nchanges to that result and updates the cached value if changes occur.`),mdx(\"p\",null,\"Following requests will \",mdx(\"em\",{parentName:\"p\"},\"always\"),` be a cache hit until there has been no request\nfor the resource for the TTL (which is typically 3 days).`),mdx(\"p\",null,`Clients can perform blocking queries against the local agent which will be\nserved from the cache. This allows multiple clients to watch the same resource\nlocally while only a single blocking watch for that resource will be made to the\nservers from a given client agent.`),mdx(\"p\",null,\"HTTP \",mdx(\"inlineCode\",{parentName:\"p\"},\"Cache-Control\"),` headers are ignored in this mode since the cache is being\nactively updated and has different semantics to a typical passive cache.`),mdx(\"p\",null,\"In all cases the HTTP \",mdx(\"inlineCode\",{parentName:\"p\"},\"X-Cache\"),` header is always set in the response to either\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"HIT\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"MISS\"),\" indicating whether the response was served from cache or not.\"),mdx(\"p\",null,\"For cache hits, the HTTP \",mdx(\"inlineCode\",{parentName:\"p\"},\"Age\"),` header is always set in the response to indicate\nhow many seconds since that response was fetched from the servers. As long as\nthe local agent has an active connection to the servers, the age will always be\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"0\"),` since the value is up-to-date. If the agent gets disconnected, the cached\nresult is still returned but with an `,mdx(\"inlineCode\",{parentName:\"p\"},\"Age\"),` that indicates how many seconds have\nelapsed since the local agent got disconnected from the servers, during which\ntime updates to the result might have been missed.`))}MDXContent.isMDXComponent=!0;\n","scope":{"version":"latest"}},"product":{"name":"Consul","slug":"consul","algoliaConfig":{"indexName":"product_CONSUL","searchOnlyApiKey":"fbd5dc1f0078d41509fcc560386fd534"},"analyticsConfig":{"includedDomains":"consul.io www.consul.io","segmentWriteKey":"IyzLrqXkox5KJ8XL4fo8vTYNGfiKlTCm"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Consul by HashiCorp","description":"Consul is a service networking solution to automate network configurations, discover services, and enable secure connectivity across any cloud or runtime.","image":"https://www.consulproject.io/consul-public/img/og-image.png","icon":[{"href":"/consul-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.11.3","subnavItems":[],"basePaths":["docs","api-docs","commands","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"CLI","path":"commands"}],"currentRootDocsPath":{"iconName":"api","name":"API","path":"api-docs"}},"projectName":null,"versions":null},"__N_SSG":true}